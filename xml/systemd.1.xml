<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                   "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- lifted from man+troff by doclifter -->
<refentry id='systemd1'>
<!-- ' t -->
<refmeta>
<refentrytitle>SYSTEMD</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='manual'>systemd 210</refmiscinfo>
</refmeta>
<refnamediv>
<refname>systemd</refname>
<refname>init</refname>
<refpurpose>systemd system and service manager</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>systemd</command>    <arg choice='opt' rep='repeat'><replaceable>OPTIONS</replaceable></arg>
    <arg choice='plain'><replaceable>init</replaceable></arg>
    <arg choice='opt' rep='repeat'><replaceable>OPTIONS</replaceable></arg>
    <arg choice='opt'><replaceable>COMMAND</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>systemd is a system and service manager for Linux operating systems. When run as first process on boot (as PID 1), it acts as init system that brings up and maintains userspace services.</para>

<para>For compatibility with SysV, if systemd is called as
<emphasis remap='B'>init</emphasis>
and a PID that is not 1, it will execute
<emphasis remap='B'>telinit</emphasis>
and pass all command line arguments unmodified. That means
<emphasis remap='B'>init</emphasis>
and
<emphasis remap='B'>telinit</emphasis>
are mostly equivalent when invoked from normal login sessions. See
<citerefentry><refentrytitle>telinit</refentrytitle><manvolnum>8</manvolnum></citerefentry>
for more information.</para>

<para>When run as system instance, systemd interprets the configuration file
system.conf, otherwise
user.conf. See
<citerefentry><refentrytitle>systemd-system.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
for more information.</para>
</refsect1>

<refsect1 id='options'><title>OPTIONS</title>
<para>The following options are understood:</para>

<para><option>--test</option></para>
<literallayout remap='RS'>
Determine startup sequence, dump it and exit. This is an option useful for debugging only.
</literallayout> <!-- remap='RE' -->

<para><option>--dump-configuration-items</option></para>
<literallayout remap='RS'>
Dump understood unit configuration items. This outputs a terse but complete list of configuration items understood in unit definition files.
</literallayout> <!-- remap='RE' -->

<para><option>--unit=</option></para>
  <blockquote remap='RS'>
<para>Set default unit to activate on startup. If not specified, defaults to
default.target.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--system</option>, <option>--user</option></para>
  <blockquote remap='RS'>
<para>For
<option>--system</option>, tell systemd to run a system instance, even if the process ID is not 1, i.e. systemd is not run as init process.
<option>--user</option>
does the opposite, running a user instance even if the process ID is 1. Normally it should not be necessary to pass these options, as systemd automatically detects the mode it is started in. These options are hence of little use except for debugging. Note that it is not supported booting and maintaining a full system with systemd running in
<option>--system</option>
mode, but PID not 1. In practice, passing
<option>--system</option>
explicitly is only useful in conjunction with
<option>--test</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--dump-core</option></para>
<literallayout remap='RS'>
Dump core on crash. This switch has no effect when run as user instance.
</literallayout> <!-- remap='RE' -->

<para><option>--crash-shell</option></para>
<literallayout remap='RS'>
Run shell on crash. This switch has no effect when run as user instance.
</literallayout> <!-- remap='RE' -->

<para><option>--confirm-spawn</option></para>
<literallayout remap='RS'>
Ask for confirmation when spawning processes. This switch has no effect when run as user instance.
</literallayout> <!-- remap='RE' -->

<para><option>--show-status=</option></para>
  <blockquote remap='RS'>
<para>Show terse service status information while booting. This switch has no effect when run as user instance. Takes a boolean argument which may be omitted which is interpreted as
<emphasis remap='B'>true</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--log-target=</option></para>
  <blockquote remap='RS'>
<para>Set log target. Argument must be one of
<emphasis remap='B'>console</emphasis>,
<emphasis remap='B'>journal</emphasis>,
<emphasis remap='B'>syslog</emphasis>,
<emphasis remap='B'>kmsg</emphasis>,
<emphasis remap='B'>journal-or-kmsg</emphasis>,
<emphasis remap='B'>syslog-or-kmsg</emphasis>,
<emphasis remap='B'>null</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--log-level=</option></para>
  <blockquote remap='RS'>
<para>Set log level. As argument this accepts a numerical log level or the well-known
<citerefentry><refentrytitle>syslog</refentrytitle><manvolnum>3</manvolnum></citerefentry>
symbolic names (lowercase):
<emphasis remap='B'>emerg</emphasis>,
<emphasis remap='B'>alert</emphasis>,
<emphasis remap='B'>crit</emphasis>,
<emphasis remap='B'>err</emphasis>,
<emphasis remap='B'>warning</emphasis>,
<emphasis remap='B'>notice</emphasis>,
<emphasis remap='B'>info</emphasis>,
<emphasis remap='B'>debug</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--log-color=</option></para>
  <blockquote remap='RS'>
<para>Highlight important log messages. Argument is a boolean value. If the argument is omitted, it defaults to
<emphasis remap='B'>true</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--log-location=</option></para>
  <blockquote remap='RS'>
<para>Include code location in log messages. This is mostly relevant for debugging purposes. Argument is a boolean value. If the argument is omitted it defaults to
<emphasis remap='B'>true</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>--default-standard-output=</option>, <option>--default-standard-error=</option></para>
  <blockquote remap='RS'>
<para>Sets the default output or error output for all services and sockets, respectively. That is, controls the default for
<emphasis remap='B'>StandardOutput=</emphasis>
and
<emphasis remap='B'>StandardError=</emphasis>
(see
<citerefentry><refentrytitle>systemd.exec</refentrytitle><manvolnum>5</manvolnum></citerefentry>
for details). Takes one of
<emphasis remap='B'>inherit</emphasis>,
<emphasis remap='B'>null</emphasis>,
<emphasis remap='B'>tty</emphasis>,
<emphasis remap='B'>journal</emphasis>,
<emphasis remap='B'>journal+console</emphasis>,
<emphasis remap='B'>syslog</emphasis>,
<emphasis remap='B'>syslog+console</emphasis>,
<emphasis remap='B'>kmsg</emphasis>,
<emphasis remap='B'>kmsg+console</emphasis>. If the argument is omitted
<option>--default-standard-output=</option>
defaults to
<emphasis remap='B'>journal</emphasis>
and
<option>--default-standard-error=</option>
to
<emphasis remap='B'>inherit</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><option>-h</option>, <option>--help</option></para>
<programlisting remap='RS'>
Print a short help text and exit.
</programlisting> <!-- remap='RE' -->

<para><option>--version</option></para>
<programlisting remap='RS'>
Print a short version string and exit.
</programlisting> <!-- remap='RE' -->
</refsect1>

<refsect1 id='concepts'><title>CONCEPTS</title>
<para>systemd provides a dependency system between various entities called "units" of 12 different types. Units encapsulate various objects that are relevant for system boot-up and maintenance. The majority of units are configured in unit configuration files, whose syntax and basic set of options is described in
<citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>, however some are created automatically from other configuration, dynamically from system state or programmatically at runtime. Units may be "active" (meaning started, bound, plugged in, ..., depending on the unit type, see below), or "inactive" (meaning stopped, unbound, unplugged, ...), as well as in the process of being activated or deactivated, i.e. between the two states (these states are called "activating", "deactivating"). A special "failed" state is available as well, which is very similar to "inactive" and is entered when the service failed in some way (process returned error code on exit, or crashed, or an operation timed out). If this state is entered, the cause will be logged, for later reference. Note that the various unit types may have a number of additional substates, which are mapped to the five generalized unit states described here.</para>

<para>The following unit types are available:</para>

  <blockquote remap='RS'>
<para>\h'-04' 1.\h'+01'
Service units, which start and control daemons and the processes they consist of. For details see
<citerefentry><refentrytitle>systemd.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 2.\h'+01'
Socket units, which encapsulate local IPC or network sockets in the system, useful for socket-based activation. For details about socket units see
<citerefentry><refentrytitle>systemd.socket</refentrytitle><manvolnum>5</manvolnum></citerefentry>, for details on socket-based activation and other forms of activation, see
<citerefentry><refentrytitle>daemon</refentrytitle><manvolnum>7</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 3.\h'+01'
Target units are useful to group units, or provide well-known synchronization points during boot-up, see
<citerefentry><refentrytitle>systemd.target</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 4.\h'+01'
Device units expose kernel devices in systemd and may be used to implement device-based activation. For details see
<citerefentry><refentrytitle>systemd.device</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 5.\h'+01'
Mount units control mount points in the file system, for details see
<citerefentry><refentrytitle>systemd.mount</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 6.\h'+01'
Automount units provide automount capabilities, for on-demand mounting of file systems as well as parallelized boot-up. See
<citerefentry><refentrytitle>systemd.automount</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 7.\h'+01'
Snapshot units can be used to temporarily save the state of the set of systemd units, which later may be restored by activating the saved snapshot unit. For more information see
<citerefentry><refentrytitle>systemd.snapshot</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 8.\h'+01'
Timer units are useful for triggering activation of other units based on timers. You may find details in
<citerefentry><refentrytitle>systemd.timer</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04' 9.\h'+01'
Swap units are very similar to mount units and encapsulate memory swap partitions or files of the operating system. They are described in
<citerefentry><refentrytitle>systemd.swap</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04'10.\h'+01'
Path units may be used to activate other services when file system objects change or are modified. See
<citerefentry><refentrytitle>systemd.path</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04'11.\h'+01'
Slice units may be used to group units which manage system processes (such as service and scope units) in a hierarchical tree for resource management purposes. See
<citerefentry><refentrytitle>systemd.slice</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

  <blockquote remap='RS'>
<para>\h'-04'12.\h'+01'
Scope units are similar to service units, but manage foreign processes instead of starting them as well. See
<citerefentry><refentrytitle>systemd.scope</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

<para>Units are named as their configuration files. Some units have special semantics. A detailed list is available in
<citerefentry><refentrytitle>systemd.special</refentrytitle><manvolnum>7</manvolnum></citerefentry>.</para>

<para>systemd knows various kinds of dependencies, including positive and negative requirement dependencies (i.e.
<emphasis remap='I'>Requires=</emphasis>
and
<emphasis remap='I'>Conflicts=</emphasis>) as well as ordering dependencies (<emphasis remap='I'>After=</emphasis>
and
<emphasis remap='I'>Before=</emphasis>). NB: ordering and requirement dependencies are orthogonal. If only a requirement dependency exists between two units (e.g.
foo.service
requires
bar.service), but no ordering dependency (e.g.
foo.service
after
bar.service) and both are requested to start, they will be started in parallel. It is a common pattern that both requirement and ordering dependencies are placed between two units. Also note that the majority of dependencies are implicitly created and maintained by systemd. In most cases, it should be unnecessary to declare additional dependencies manually, however it is possible to do this.</para>

<para>Application programs and units (via dependencies) may request state changes of units. In systemd, these requests are encapsulated as &apos;jobs&apos; and maintained in a job queue. Jobs may succeed or can fail, their execution is ordered based on the ordering dependencies of the units they have been scheduled for.</para>

<para>On boot systemd activates the target unit
default.target
whose job is to activate on-boot services and other on-boot units by pulling them in via dependencies. Usually the unit name is just an alias (symlink) for either
graphical.target
(for fully-featured boots into the UI) or
multi-user.target
(for limited console-only boots for use in embedded or server environments, or similar; a subset of graphical.target). However, it is at the discretion of the administrator to configure it as an alias to any other target unit. See
<citerefentry><refentrytitle>systemd.special</refentrytitle><manvolnum>7</manvolnum></citerefentry>
for details about these target units.</para>

<para>Processes systemd spawns are placed in individual Linux control groups named after the unit which they belong to in the private systemd hierarchy. (see
<phrase remap='color:blue'><emphasis remap='B'>cgroups.txt</emphasis></phrase><?troff ps -2?><superscript>[1]</superscript><?troff ps +2?>
for more information about control groups, or short "cgroups"). systemd uses this to effectively keep track of processes. Control group information is maintained in the kernel, and is accessible via the file system hierarchy (beneath
/sys/fs/cgroup/systemd/), or in tools such as
<citerefentry><refentrytitle>ps</refentrytitle><manvolnum>1</manvolnum></citerefentry>
(<emphasis remap='B'>ps xawf -eo pid,user,cgroup,args</emphasis>
is particularly useful to list all processes and the systemd units they belong to.).</para>

<para>systemd is compatible with the SysV init system to a large degree: SysV init scripts are supported and simply read as an alternative (though limited) configuration file format. The SysV
/dev/initctl
interface is provided, and compatibility implementations of the various SysV client tools are available. In addition to that, various established Unix functionality such as
/etc/fstab
or the
utmp
database are supported.</para>

<para>systemd has a minimal transaction system: if a unit is requested to start up or shut down it will add it and all its dependencies to a temporary transaction. Then, it will verify if the transaction is consistent (i.e. whether the ordering of all units is cycle-free). If it is not, systemd will try to fix it up, and removes non-essential jobs from the transaction that might remove the loop. Also, systemd tries to suppress non-essential jobs in the transaction that would stop a running service. Finally it is checked whether the jobs of the transaction contradict jobs that have already been queued, and optionally the transaction is aborted then. If all worked out and the transaction is consistent and minimized in its impact it is merged with all already outstanding jobs and added to the run queue. Effectively this means that before executing a requested operation, systemd will verify that it makes sense, fixing it if possible, and only failing if it really cannot work.</para>

<para>Systemd contains native implementations of various tasks that need to be executed as part of the boot process. For example, it sets the hostname or configures the loopback network device. It also sets up and mounts various API file systems, such as
/sys
or
/proc.</para>

<para>For more information about the concepts and ideas behind systemd, please refer to the
<phrase remap='color:blue'><emphasis remap='B'>Original Design Document</emphasis></phrase><?troff ps -2?><superscript>[2]</superscript><?troff ps +2?>.</para>

<para>Note that some but not all interfaces provided by systemd are covered by the
<phrase remap='color:blue'><emphasis remap='B'>Interface Stability Promise</emphasis></phrase><?troff ps -2?><superscript>[3]</superscript><?troff ps +2?>.</para>

<para>Units may be generated dynamically at boot and system manager reload time, for example based on other configuration files or parameters passed on the kernel command line. For details see the
<phrase remap='color:blue'><emphasis remap='B'>Generators Specification</emphasis></phrase><?troff ps -2?><superscript>[4]</superscript><?troff ps +2?>.</para>

<para>Systems which invoke systemd in a container or initrd environment should implement the
<phrase remap='color:blue'><emphasis remap='B'>Container Interface</emphasis></phrase><?troff ps -2?><superscript>[5]</superscript><?troff ps +2?>
or
<phrase remap='color:blue'><emphasis remap='B'>initrd Interface</emphasis></phrase><?troff ps -2?><superscript>[6]</superscript><?troff ps +2?>
specifications, respectively.</para>
</refsect1>

<refsect1 id='directories'><title>DIRECTORIES</title>
<para>System unit directories</para>
  <blockquote remap='RS'>
<para>The systemd system manager reads unit configuration from various directories. Packages that want to install unit files shall place them in the directory returned by
<emphasis remap='B'>pkg-config systemd --variable=systemdsystemunitdir</emphasis>. Other directories checked are
/usr/local/lib/systemd/system
and
/usr/lib/systemd/system. User configuration always takes precedence.
<emphasis remap='B'>pkg-config systemd --variable=systemdsystemconfdir</emphasis>
returns the path of the system configuration directory. Packages should alter the content of these directories only with the
<emphasis remap='B'>enable</emphasis>
and
<emphasis remap='B'>disable</emphasis>
commands of the
<citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>
tool. Full list of directories is provided in
<citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

<para>User unit directories</para>
  <blockquote remap='RS'>
<para>Similar rules apply for the user unit directories. However, here the
<phrase remap='color:blue'><emphasis remap='B'>XDG Base Directory specification</emphasis></phrase><?troff ps -2?><superscript>[7]</superscript><?troff ps +2?>
is followed to find units. Applications should place their unit files in the directory returned by
<emphasis remap='B'>pkg-config systemd --variable=systemduserunitdir</emphasis>. Global configuration is done in the directory reported by
<emphasis remap='B'>pkg-config systemd --variable=systemduserconfdir</emphasis>. The
<emphasis remap='B'>enable</emphasis>
and
<emphasis remap='B'>disable</emphasis>
commands of the
<citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>
tool can handle both global (i.e. for all users) and private (for one user) enabling/disabling of units. Full list of directories is provided in
<citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

<para>SysV init scripts directory</para>
  <blockquote remap='RS'>
<para>The location of the SysV init script directory varies between distributions. If systemd cannot find a native unit file for a requested service, it will look for a SysV init script of the same name (with the
.service
suffix removed).
  </para></blockquote> <!-- remap='RE' -->

<para>SysV runlevel link farm directory</para>
<programlisting remap='RS'>
The location of the SysV runlevel link farm directory varies between distributions. systemd will take the link farm into account when figuring out whether a service shall be enabled. Note that a service unit with a native unit configuration file cannot be started by activating it in the SysV runlevel link farm.
</programlisting> <!-- remap='RE' -->
</refsect1>

<refsect1 id='signals'><title>SIGNALS</title>
<para><constant>SIGTERM</constant></para>
  <blockquote remap='RS'>
<para>Upon receiving this signal the systemd system manager serializes its state, reexecutes itself and deserializes the saved state again. This is mostly equivalent to
<emphasis remap='B'>systemctl daemon-reexec</emphasis>.</para>

<para>systemd user managers will start the
exit.target
unit when this signal is received. This is mostly equivalent to
<userinput>systemctl --user start exit.target</userinput>.
  </para></blockquote> <!-- remap='RE' -->

<para><constant>SIGINT</constant></para>
  <blockquote remap='RS'>
<para>Upon receiving this signal the systemd system manager will start the
ctrl-alt-del.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start ctl-alt-del.target</emphasis>.</para>

<para>systemd user managers treat this signal the same way as
<constant>SIGTERM</constant>.
  </para></blockquote> <!-- remap='RE' -->

<para><constant>SIGWINCH</constant></para>
  <blockquote remap='RS'>
<para>When this signal is received the systemd system manager will start the
kbrequest.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start kbrequest.target</emphasis>.</para>

<para>This signal is ignored by systemd user managers.
  </para></blockquote> <!-- remap='RE' -->

<para><constant>SIGPWR</constant></para>
  <blockquote remap='RS'>
<para>When this signal is received the systemd manager will start the
sigpwr.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start sigpwr.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGUSR1</emphasis></para>
<programlisting remap='RS'>
When this signal is received the systemd manager will try to reconnect to the D-Bus bus.
</programlisting> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGUSR2</emphasis></para>
  <blockquote remap='RS'>
<para>When this signal is received the systemd manager will log its complete state in human readable form. The data logged is the same as printed by
<emphasis remap='B'>systemctl dump</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><constant>SIGHUP</constant></para>
  <blockquote remap='RS'>
<para>Reloads the complete daemon configuration. This is mostly equivalent to
<emphasis remap='B'>systemctl daemon-reload</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+0</emphasis></para>
  <blockquote remap='RS'>
<para>Enters default mode, starts the
default.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start default.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+1</emphasis></para>
  <blockquote remap='RS'>
<para>Enters rescue mode, starts the
rescue.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl isolate rescue.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+2</emphasis></para>
  <blockquote remap='RS'>
<para>Enters emergency mode, starts the
emergency.service
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl isolate emergency.service</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+3</emphasis></para>
  <blockquote remap='RS'>
<para>Halts the machine, starts the
halt.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start halt.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+4</emphasis></para>
  <blockquote remap='RS'>
<para>Powers off the machine, starts the
poweroff.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start poweroff.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+5</emphasis></para>
  <blockquote remap='RS'>
<para>Reboots the machine, starts the
reboot.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start reboot.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+6</emphasis></para>
  <blockquote remap='RS'>
<para>Reboots the machine via kexec, starts the
kexec.target
unit. This is mostly equivalent to
<emphasis remap='B'>systemctl start kexec.target</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+13</emphasis></para>
<literallayout remap='RS'>
Immediately halts the machine.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+14</emphasis></para>
<literallayout remap='RS'>
Immediately powers off the machine.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+15</emphasis></para>
<literallayout remap='RS'>
Immediately reboots the machine.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+16</emphasis></para>
<literallayout remap='RS'>
Immediately reboots the machine with kexec.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+20</emphasis></para>
  <blockquote remap='RS'>
<para>Enables display of status messages on the console, as controlled via
<emphasis remap='I'>systemd.show_status=1</emphasis>
on the kernel command line.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+21</emphasis></para>
  <blockquote remap='RS'>
<para>Disables display of status messages on the console, as controlled via
<emphasis remap='I'>systemd.show_status=0</emphasis>
on the kernel command line.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+22</emphasis>, <emphasis remap='B'>SIGRTMIN+23</emphasis></para>
  <blockquote remap='RS'>
<para>Sets the log level to
"debug"
(or
"info"
on
<emphasis remap='B'>SIGRTMIN+23</emphasis>), as controlled via
<emphasis remap='I'>systemd.log_level=debug</emphasis>
(or
<emphasis remap='I'>systemd.log_level=info</emphasis>
on
<emphasis remap='B'>SIGRTMIN+23</emphasis>) on the kernel command line.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='B'>SIGRTMIN+24</emphasis></para>
<literallayout remap='RS'>
Immediately exits the manager (only available for --user instances).
</literallayout> <!-- remap='RE' -->
<para><emphasis remap='B'>SIGRTMIN+26</emphasis>, <emphasis remap='B'>SIGRTMIN+27</emphasis>, <emphasis remap='B'>SIGRTMIN+28</emphasis>, <emphasis remap='B'>SIGRTMIN+29</emphasis></para>
  <blockquote remap='RS'>
<para>Sets the log level to
"journal-or-kmsg"
(or
"console"
on
<emphasis remap='B'>SIGRTMIN+27</emphasis>,
"kmsg"
on
<emphasis remap='B'>SIGRTMIN+28</emphasis>, or
"syslog-or-kmsg"
on
<emphasis remap='B'>SIGRTMIN+29</emphasis>), as controlled via
<emphasis remap='I'>systemd.log_target=journal-or-kmsg</emphasis>
(or
<emphasis remap='I'>systemd.log_target=console</emphasis>
on
<emphasis remap='B'>SIGRTMIN+27</emphasis>,
<emphasis remap='I'>systemd.log_target=kmsg</emphasis>
on
<emphasis remap='B'>SIGRTMIN+28</emphasis>, or
<emphasis remap='I'>systemd.log_target=syslog-or-kmsg</emphasis>
on
<emphasis remap='B'>SIGRTMIN+29</emphasis>) on the kernel command line.
  </para></blockquote> <!-- remap='RE' -->
</refsect1>

<refsect1 id='environment'><title>ENVIRONMENT</title>
<para><emphasis remap='I'>$SYSTEMD_LOG_LEVEL</emphasis></para>
  <blockquote remap='RS'>
<para>systemd reads the log level from this environment variable. This can be overridden with
<option>--log-level=</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_LOG_TARGET</emphasis></para>
  <blockquote remap='RS'>
<para>systemd reads the log target from this environment variable. This can be overridden with
<option>--log-target=</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_LOG_COLOR</emphasis></para>
  <blockquote remap='RS'>
<para>Controls whether systemd highlights important log messages. This can be overridden with
<option>--log-color=</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_LOG_LOCATION</emphasis></para>
  <blockquote remap='RS'>
<para>Controls whether systemd prints the code location along with log messages. This can be overridden with
<option>--log-location=</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$XDG_CONFIG_HOME</emphasis>, <emphasis remap='I'>$XDG_CONFIG_DIRS</emphasis>, <emphasis remap='I'>$XDG_DATA_HOME</emphasis>, <emphasis remap='I'>$XDG_DATA_DIRS</emphasis></para>
  <blockquote remap='RS'>
<para>The systemd user manager uses these variables in accordance to the
<phrase remap='color:blue'><emphasis remap='B'>XDG Base Directory specification</emphasis></phrase><?troff ps -2?><superscript>[7]</superscript><?troff ps +2?>
to find its configuration.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_UNIT_PATH</emphasis></para>
<literallayout remap='RS'>
Controls where systemd looks for unit files.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_SYSVINIT_PATH</emphasis></para>
<literallayout remap='RS'>
Controls where systemd looks for SysV init scripts.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='I'>$SYSTEMD_SYSVRCND_PATH</emphasis></para>
<literallayout remap='RS'>
Controls where systemd looks for SysV init script runlevel link farms.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='I'>$LISTEN_PID</emphasis>, <emphasis remap='I'>$LISTEN_FDS</emphasis></para>
  <blockquote remap='RS'>
<para>Set by systemd for supervised processes during socket-based activation. See
<citerefentry><refentrytitle>sd_listen_fds</refentrytitle><manvolnum>3</manvolnum></citerefentry>
for more information.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>$NOTIFY_SOCKET</emphasis></para>
  <blockquote remap='RS'>
<para>Set by systemd for supervised processes for status and start-up completion notification. See
<citerefentry><refentrytitle>sd_notify</refentrytitle><manvolnum>3</manvolnum></citerefentry>
for more information.
  </para></blockquote> <!-- remap='RE' -->
</refsect1>

<refsect1 id='kernel_command_line'><title>KERNEL COMMAND LINE</title>
<para>When run as system instance systemd parses a number of kernel command line arguments<?troff ps -2?><superscript>[8]</superscript><?troff ps +2?>:</para>

<para><emphasis remap='I'>systemd.unit=</emphasis>, <emphasis remap='I'>rd.systemd.unit=</emphasis></para>
  <blockquote remap='RS'>
<para>Overrides the unit to activate on boot. Defaults to
default.target. This may be used to temporarily boot into a different boot unit, for example
rescue.target
or
emergency.service. See
<citerefentry><refentrytitle>systemd.special</refentrytitle><manvolnum>7</manvolnum></citerefentry>
for details about these units. The option prefixed with
"rd."
is honored only in the initial RAM disk (initrd), while the one that is not prefixed only in the main system.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.dump_core=</emphasis></para>
  <blockquote remap='RS'>
<para>Takes a boolean argument. If
<emphasis remap='B'>true</emphasis>, systemd dumps core when it crashes. Otherwise, no core dump is created. Defaults to
<emphasis remap='B'>true</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.crash_shell=</emphasis></para>
  <blockquote remap='RS'>
<para>Takes a boolean argument. If
<emphasis remap='B'>true</emphasis>, systemd spawns a shell when it crashes. Otherwise, no shell is spawned. Defaults to
<emphasis remap='B'>false</emphasis>, for security reasons, as the shell is not protected by any password authentication.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.crash_chvt=</emphasis></para>
  <blockquote remap='RS'>
<para>Takes an integer argument. If positive systemd activates the specified virtual terminal when it crashes. Defaults to
<option>-1</option>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.confirm_spawn=</emphasis></para>
  <blockquote remap='RS'>
<para>Takes a boolean argument. If
<emphasis remap='B'>true</emphasis>, asks for confirmation when spawning processes. Defaults to
<emphasis remap='B'>false</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.show_status=</emphasis></para>
  <blockquote remap='RS'>
<para>Takes a boolean argument or the constant
<emphasis remap='B'>auto</emphasis>. If
<emphasis remap='B'>true</emphasis>, shows terse service status updates on the console during bootup.
<emphasis remap='B'>auto</emphasis>
behaves like
<emphasis remap='B'>false</emphasis>
until a service fails or there is a significant delay in boot. Defaults to
<emphasis remap='B'>true</emphasis>, unless
<emphasis remap='B'>quiet</emphasis>
is passed as kernel command line option in which case it defaults to
<emphasis remap='B'>auto</emphasis>.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.log_target=</emphasis>, <emphasis remap='I'>systemd.log_level=</emphasis>, <emphasis remap='I'>systemd.log_color=</emphasis>, <emphasis remap='I'>systemd.log_location=</emphasis></para>
  <blockquote remap='RS'>
<para>Controls log output, with the same effect as the
<emphasis remap='I'>$SYSTEMD_LOG_TARGET</emphasis>,
<emphasis remap='I'>$SYSTEMD_LOG_LEVEL</emphasis>,
<emphasis remap='I'>$SYSTEMD_LOG_COLOR</emphasis>,
<emphasis remap='I'>$SYSTEMD_LOG_LOCATION</emphasis>
environment variables described above.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.default_standard_output=</emphasis>, <emphasis remap='I'>systemd.default_standard_error=</emphasis></para>
  <blockquote remap='RS'>
<para>Controls default standard output and error output for services, with the same effect as the
<option>--default-standard-output=</option>
and
<option>--default-standard-error=</option>
command line arguments described above, respectively.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>systemd.setenv=</emphasis></para>
<literallayout remap='RS'>
Takes a string argument in the form VARIABLE=VALUE. May be used to set default environment variables to add to forked child processes. May be used more than once to set multiple variables.
</literallayout> <!-- remap='RE' -->

<para><emphasis remap='I'>quiet</emphasis></para>
  <blockquote remap='RS'>
<para>Turn off status output at boot, much like
<emphasis remap='I'>systemd.show_status=false</emphasis>
would. Note that this option is also read by the kernel itself and disables kernel log output. Passing this option hence turns off the usual output from both the system manager and the kernel.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>debug</emphasis></para>
  <blockquote remap='RS'>
<para>Turn on debugging output. This is equivalent to
<emphasis remap='I'>systemd.log_level=debug</emphasis>. Note that this option is also read by the kernel itself and enables kernel debug output. Passing this option hence turns on the debug output from both the system manager and the kernel.
  </para></blockquote> <!-- remap='RE' -->

<para><option>-b</option>, <emphasis remap='I'>emergency</emphasis></para>
  <blockquote remap='RS'>
<para>Boot into emergency mode. This is equivalent to
<emphasis remap='I'>systemd.unit=emergency.target</emphasis>
and provided for compatibility reasons and to be easier to type.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>single</emphasis>, <emphasis remap='I'>s</emphasis>, <emphasis remap='I'>S</emphasis>, <literal>1</literal></para>
  <blockquote remap='RS'>
<para>Boot into rescue mode. This is equivalent to
<emphasis remap='I'>systemd.unit=rescue.target</emphasis>
and provided for compatibility reasons and to be easier to type.
  </para></blockquote> <!-- remap='RE' -->

<para><literal>2</literal>, <literal>3</literal>, <literal>4</literal>, <literal>5</literal></para>
  <blockquote remap='RS'>
<para>Boot into the specified legacy SysV runlevel. These are equivalent to
<emphasis remap='I'>systemd.unit=runlevel2.target</emphasis>,
<emphasis remap='I'>systemd.unit=runlevel3.target</emphasis>,
<emphasis remap='I'>systemd.unit=runlevel4.target</emphasis>, and
<emphasis remap='I'>systemd.unit=runlevel5.target</emphasis>, respectively, and provided for compatibility reasons and to be easier to type.
  </para></blockquote> <!-- remap='RE' -->

<para><emphasis remap='I'>locale.LANG=</emphasis>, <emphasis remap='I'>locale.LANGUAGE=</emphasis>, <emphasis remap='I'>locale.LC_CTYPE=</emphasis>, <emphasis remap='I'>locale.LC_NUMERIC=</emphasis>, <emphasis remap='I'>locale.LC_TIME=</emphasis>, <emphasis remap='I'>locale.LC_COLLATE=</emphasis>, <emphasis remap='I'>locale.LC_MONETARY=</emphasis>, <emphasis remap='I'>locale.LC_MESSAGES=</emphasis>, <emphasis remap='I'>locale.LC_PAPER=</emphasis>, <emphasis remap='I'>locale.LC_NAME=</emphasis>, <emphasis remap='I'>locale.LC_ADDRESS=</emphasis>, <emphasis remap='I'>locale.LC_TELEPHONE=</emphasis>, <emphasis remap='I'>locale.LC_MEASUREMENT=</emphasis>, <emphasis remap='I'>locale.LC_IDENTIFICATION=</emphasis></para>
  <blockquote remap='RS'>
<para>Set the system locale to use. This overrides the settings in
/etc/locale.conf. For more information see
<citerefentry><refentrytitle>locale.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
and
<citerefentry><refentrytitle>locale</refentrytitle><manvolnum>7</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

<para>For other kernel command line parameters understood by components of the core OS, please refer to
<citerefentry><refentrytitle>kernel-command-line</refentrytitle><manvolnum>7</manvolnum></citerefentry>.</para>
</refsect1>

<refsect1 id='sockets_and_fifos'><title>SOCKETS AND FIFOS</title>
<para>/run/systemd/notify</para>
  <blockquote remap='RS'>
<para>Daemon status notification socket. This is an
<emphasis remap='B'>AF_UNIX</emphasis>
datagram socket and is used to implement the daemon notification logic as implemented by
<citerefentry><refentrytitle>sd_notify</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
  </para></blockquote> <!-- remap='RE' -->

<para>/run/systemd/shutdownd</para>
  <blockquote remap='RS'>
<para>Used internally by the
<citerefentry><refentrytitle>shutdown</refentrytitle><manvolnum>8</manvolnum></citerefentry>
tool to implement delayed shutdowns. This is an
<emphasis remap='B'>AF_UNIX</emphasis>
datagram socket.
  </para></blockquote> <!-- remap='RE' -->

<para>/run/systemd/private</para>
  <blockquote remap='RS'>
<para>Used internally as communication channel between
<citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>
and the systemd process. This is an
<emphasis remap='B'>AF_UNIX</emphasis>
stream socket. This interface is private to systemd and should not be used in external projects.
  </para></blockquote> <!-- remap='RE' -->

<para>/dev/initctl</para>
  <blockquote remap='RS'>
<para>Limited compatibility support for the SysV client interface, as implemented by the
systemd-initctl.service
unit. This is a named pipe in the file system. This interface is obsolete and should not be used in new applications.
  </para></blockquote> <!-- remap='RE' -->
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para>The
<phrase remap='color:blue'><emphasis remap='B'>systemd Homepage</emphasis></phrase><?troff ps -2?><superscript>[9]</superscript><?troff ps +2?>,
<citerefentry><refentrytitle>systemd-system.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>locale.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>journalctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>systemd-notify</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>daemon</refentrytitle><manvolnum>7</manvolnum></citerefentry>,
<citerefentry><refentrytitle>sd-daemon</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>systemd.special</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>pkg-config</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>kernel-command-line</refentrytitle><manvolnum>7</manvolnum></citerefentry>,
<citerefentry><refentrytitle>bootup</refentrytitle><manvolnum>7</manvolnum></citerefentry>,
<citerefentry><refentrytitle>systemd.directives</refentrytitle><manvolnum>7</manvolnum></citerefentry></para>
</refsect1>

<refsect1 id='notes'><title>NOTES</title>
<variablelist remap='IP'>
  <varlistentry>
  <term> 1.</term>
  <listitem>
<para>cgroups.txt</para>
  <blockquote remap='RS'>
<para>&shy;https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 2.</term>
  <listitem>
<para>Original Design Document</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://0pointer.de/blog/projects/systemd.html'>http://0pointer.de/blog/projects/systemd.html</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 3.</term>
  <listitem>
<para>Interface Stability Promise</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://www.freedesktop.org/wiki/Software/systemd/InterfaceStabilityPromise'>http://www.freedesktop.org/wiki/Software/systemd/InterfaceStabilityPromise</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 4.</term>
  <listitem>
<para>Generators Specification</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://www.freedesktop.org/wiki/Software/systemd/Generators'>http://www.freedesktop.org/wiki/Software/systemd/Generators</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 5.</term>
  <listitem>
<para>Container Interface</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://www.freedesktop.org/wiki/Software/systemd/ContainerInterface'>http://www.freedesktop.org/wiki/Software/systemd/ContainerInterface</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 6.</term>
  <listitem>
<para>initrd Interface</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://www.freedesktop.org/wiki/Software/systemd/InitrdInterface'>http://www.freedesktop.org/wiki/Software/systemd/InitrdInterface</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 7.</term>
  <listitem>
<para>XDG Base Directory specification</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html'>http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 8.</term>
  <listitem>
<para>If run inside a Linux container these arguments may be passed as command line arguments to systemd itself, next to any of the command line options listed in the Options section above. If run outside of Linux containers, these arguments are parsed from
/proc/cmdline
instead.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term> 9.</term>
  <listitem>
<para>systemd Homepage</para>
  <blockquote remap='RS'>
<para>&shy;<ulink url='http://www.freedesktop.org/wiki/Software/systemd/'>http://www.freedesktop.org/wiki/Software/systemd/</ulink>
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>
</refentry>


<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                   "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- lifted from man+troff by doclifter -->
<refentry id='npmversion1'>
<refmeta>
<refentrytitle>NPM-VERSION</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='source'>November 2015</refmiscinfo>
</refmeta>
<refnamediv>
<refname>npm-version</refname>
<refpurpose>Bump a package version</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>npm</command>    <arg choice='plain'><replaceable>version</replaceable></arg>
    <group choice='opt'><arg choice='plain'><replaceable>&lt;newversion&gt;</replaceable></arg><arg choice='plain'><replaceable>major</replaceable></arg><arg choice='plain'><replaceable>minor</replaceable></arg><arg choice='plain'><replaceable>patch</replaceable></arg><arg choice='plain'><replaceable>premajor</replaceable></arg><arg choice='plain'><replaceable>preminor</replaceable></arg><arg choice='plain'><replaceable>prepatch</replaceable></arg><arg choice='plain'><replaceable>prerelease</replaceable></arg></group>
    <sbr/>
    <arg choice='plain'><replaceable>'npm</replaceable></arg>
    <group choice='opt'><arg choice='plain'>-v </arg><arg choice='plain'>--version </arg></group>
    <arg choice='plain'><replaceable>'</replaceable></arg>
    <arg choice='plain'><replaceable>to</replaceable></arg>
    <arg choice='plain'><replaceable>print</replaceable></arg>
    <arg choice='plain'><replaceable>npm</replaceable></arg>
    <arg choice='plain'><replaceable>version</replaceable></arg>
    <arg choice='plain'><replaceable>'npm</replaceable></arg>
    <arg choice='plain'><replaceable>view</replaceable></arg>
    <arg choice='plain'><replaceable>&lt;pkg&gt;</replaceable></arg>
    <arg choice='plain'><replaceable>version'</replaceable></arg>
    <arg choice='plain'><replaceable>to</replaceable></arg>
    <arg choice='plain'><replaceable>view</replaceable></arg>
    <arg choice='plain'><replaceable>a</replaceable></arg>
    <arg choice='plain'><replaceable>package's</replaceable></arg>
    <arg choice='plain'><replaceable>published</replaceable></arg>
    <arg choice='plain'><replaceable>version</replaceable></arg>
    <arg choice='plain'><replaceable>'npm</replaceable></arg>
    <arg choice='plain'><replaceable>ls'</replaceable></arg>
    <arg choice='plain'><replaceable>to</replaceable></arg>
    <arg choice='plain'><replaceable>inspect</replaceable></arg>
    <arg choice='plain'><replaceable>current</replaceable></arg>
    <arg choice='plain'><replaceable>package/dependency</replaceable></arg>
    <arg choice='plain'><replaceable>versions</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>Run this in a package directory to bump the version and write the new
data back to <emphasis remap='B'>package.json</emphasis> and, if present, <emphasis remap='B'>npm-shrinkwrap.json</emphasis>&thinsp;.</para>

<para>The <emphasis remap='B'>newversion</emphasis> argument should be a valid semver string, <emphasis remap='I'>or</emphasis> a
valid second argument to semver.inc (one of <emphasis remap='B'>patch</emphasis>, <emphasis remap='B'>minor</emphasis>, <emphasis remap='B'>major</emphasis>,
<emphasis remap='B'>prepatch</emphasis>, <emphasis remap='B'>preminor</emphasis>, <emphasis remap='B'>premajor</emphasis>, <emphasis remap='B'>prerelease</emphasis>). In the second case,
the existing version will be incremented by 1 in the specified field.</para>

<para>If run in a git repo, it will also create a version commit and tag.
This behavior is controlled by <emphasis remap='B'>git-tag-version</emphasis> (see below), and can
be disabled on the command line by running <userinput>npm --no-git-tag-version version</userinput>&thinsp;.
It will fail if the working directory is not clean, unless the <option>-f</option> or
<option>--force</option> flag is set.</para>

<para>If supplied with <option>-m</option> or <option>--message</option> config option, npm will
use it as a commit message when creating a version commit.  If the
<emphasis remap='B'>message</emphasis> config contains <emphasis remap='B'>%s</emphasis> then that will be replaced with the
resulting version number.  For example:</para>

<literallayout remap='.nf'>
npm version patch -m "Upgrade to %s for reasons"
</literallayout> <!-- .fi -->

<para>If the <emphasis remap='B'>sign-git-tag</emphasis> config is set, then the tag will be signed using
the <option>-s</option> flag to git.  Note that you must have a default GPG key set up
in your git config for this to work properly.  For example:</para>

<literallayout remap='.nf'>
$ npm config set sign-git-tag true
$ npm version patch

You need a passphrase to unlock the secret key for
user: "isaacs (<ulink url='http://blog.izs.me/'>http://blog.izs.me/</ulink>) &lt;i@izs.me&gt;"
2048-bit RSA key, ID 6C481CF6, created 2010-08-31

Enter passphrase:
</literallayout> <!-- .fi -->

<para>If <emphasis remap='B'>preversion</emphasis>, <emphasis remap='B'>version</emphasis>, or <emphasis remap='B'>postversion</emphasis> are in the <emphasis remap='B'>scripts</emphasis> property of
the package.json, they will be executed as part of running <emphasis remap='B'>npm version</emphasis>&thinsp;.</para>

<para>The exact order of execution is as follows:</para>
  <blockquote remap='RS'>
  <variablelist remap='IP'>
    <varlistentry>
    <term>1.</term>
    <listitem>
<para>Check to make sure the git working directory is clean before we get started.
Your scripts may add files to the commit in future steps.
This step is skipped if the <option>--force</option> flag is set.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>2.</term>
    <listitem>
<para>Run the <emphasis remap='B'>preversion</emphasis> script. These scripts have access to the old <emphasis remap='B'>version</emphasis> in package.json.
A typical use would be running your full test suite before deploying.
Any files you want added to the commit should be explicitly added using <emphasis remap='B'>git add</emphasis>&thinsp;.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>3.</term>
    <listitem>
<para>Bump <emphasis remap='B'>version</emphasis> in <emphasis remap='B'>package.json</emphasis> as requested (<emphasis remap='B'>patch</emphasis>, <emphasis remap='B'>minor</emphasis>, <emphasis remap='B'>major</emphasis>, etc).</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>4.</term>
    <listitem>
<para>Run the <emphasis remap='B'>version</emphasis> script. These scripts have access to the new <emphasis remap='B'>version</emphasis> in package.json
(so they can incorporate it into file headers in generated files for example).
Again, scripts should explicitly add generated files to the commit using <emphasis remap='B'>git add</emphasis>&thinsp;.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>5.</term>
    <listitem>
<para>Commit and tag.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>6.</term>
    <listitem>
<para>Run the <emphasis remap='B'>postversion</emphasis> script. Use it to clean up the file system or automatically push
the commit and/or tag.</para>

    </listitem>
    </varlistentry>
  </variablelist>
  </blockquote> <!-- remap='RE' -->

<para>Take the following example:</para>

<literallayout remap='.nf'>
"scripts": {
  "preversion": "npm test",
  "version": "npm run build &amp;&amp; git add -A dist",
  "postversion": "git push &amp;&amp; git push --tags &amp;&amp; rm -rf build/temp"
}
</literallayout> <!-- .fi -->

<para>This runs all your tests, and proceeds only if they pass. Then runs your <emphasis remap='B'>build</emphasis> script, and
adds everything in the <emphasis remap='B'>dist</emphasis> directory to the commit. After the commit, it pushes the new commit
and tag up to the server, and deletes the <emphasis remap='B'>build/temp</emphasis> directory.</para>
</refsect1>

<refsect1 id='configuration'><title>CONFIGURATION</title>

<refsect2 id='gittagversion'><title>git-tag-version</title>
  <blockquote remap='RS'>
  <itemizedlist remap='IP+bullet'>
    <listitem override='bullet'>
<para>Default: true</para>
    </listitem>
    <listitem override='bullet'>
<para>Type: Boolean</para>

    </listitem>
  </itemizedlist>
  </blockquote> <!-- remap='RE' -->

<para>Commit and tag the version change.</para>
</refsect2>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
  <blockquote remap='RS'>
  <itemizedlist remap='IP+bullet'>
    <listitem override='bullet'>
<para>npm help init</para>
    </listitem>
    <listitem override='bullet'>
<para>npm help run-script</para>
    </listitem>
    <listitem override='bullet'>
<para>npm help 7 scripts</para>
    </listitem>
    <listitem override='bullet'>
<para>npm help 5 package.json</para>
    </listitem>
    <listitem override='bullet'>
<para>npm help 7 semver</para>
    </listitem>
    <listitem override='bullet'>
<para>npm help 7 config</para>

    </listitem>
  </itemizedlist>
  </blockquote> <!-- remap='RE' -->
</refsect1>
</refentry>


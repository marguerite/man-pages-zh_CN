<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                   "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- lifted from man+troff by doclifter -->
<refentry id='conky1'>
<!-- ' t &bsol;-*&bsol;- coding: us&bsol;-ascii &bsol;-*&bsol;-
URL listing suppressed (not used) -->
<refentryinfo><date>2012-05-03</date></refentryinfo>
<refmeta>
<refentrytitle>conky</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>2012-05-03</refmiscinfo>
</refmeta>
<refnamediv>
<refname>conky</refname>
<refpurpose>A system monitor for X originally based on the torsmo code, but more kickass. It just keeps on given'er. Yeah.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>conky</command>    <arg choice='plain'><replaceable>kx</replaceable></arg>
    <arg choice='opt'><replaceable>options</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>Conky is a system monitor for X originally based on
torsmo. Since its inception, Conky has changed
significantly from its predecessor, while maintaining
simplicity and configurability. Conky can display just
about anything, either on your root desktop or in its own
window. Not only does Conky have many built-in objects, it
can also display just about any piece of information by
using scripts and other external programs.</para>

<para>Conky has more than 250 built in objects, including
support for a plethora of OS stats (uname, uptime, CPU
usage, mem usage, disk usage, "top" like process stats, and
network monitoring, just to name a few), built in IMAP and
POP3 support, built in support for many popular music
players (MPD, XMMS2, BMPx, Audacious), and much much more.
Conky can display this info either as text, or using simple
progress bars and graph widgets, with different fonts and
colours.</para>

<para>We are always looking for help, whether its reporting
bugs, writing patches, or writing docs. Please use the
facilities at SourceForge to make bug reports, feature
requests, and submit patches, or stop by #conky on
irc.freenode.net if you have questions or want to
contribute.</para>

<para>Thanks for your interest in Conky.</para>
</refsect1>

<refsect1 id='compiling'><title>COMPILING</title>
<para>For users compiling from source on a binary distro,
make sure you have the X development libraries installed
(Unless you provide configure with "--disable-x11"). This
should be a package along the lines of "libx11-dev" or
"xorg-x11-dev" for X11 libs, and similar "-dev" format for
the other libs required (depending on your configure
options). You should be able to see which extra packages
you need to install by reading errors that you get from
'./configure'. You can enable/disable stuff by giving
options to configure, but be careful with disabling. For
example: with --disable-math you won't get errors but
logarithmic graphs will be normal graphs and gauges
will miss their line.</para> 

<para>Conky has (for some time) been available in the
repositories of most popular distributions. Here are some
installation instructions for a few:</para>

<para>Gentoo users -- Conky is in Gentoo's Portage...
simply use "emerge app-admin/conky" for
installation.</para>

<para>Debian, etc. users -- Conky should be in your
repositories, and can be installed by doing "aptitude
install conky".</para>

<para>Example to compile and run Conky with all optional
components (note that some configure options may differ for
your system):</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>sh autogen.sh</emphasis> <emphasis remap='B'># Only required if building from the git repo</emphasis></term>
  <term><emphasis remap='B'>./configure</emphasis> <option>--prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --datadir=/usr/share --sysconfdir=/etc --localstatedir=/var/lib --disable-own-window --enable-audacious[=yes|no|legacy] --enable-bmpx --disable-hddtemp --disable-mpd --enable-xmms2 --disable-portmon --disable-network --enable-debug --disable-x11 --disable-double-buffer --disable-xdamage --disable-xft</option></term>
  <term><emphasis remap='B'>make</emphasis> </term>
  <term><emphasis remap='B'>make install</emphasis> <emphasis remap='B'># Optional</emphasis></term>
  <term><emphasis remap='B'>src/conky</emphasis> </term>
  <listitem>

<para>Conky has been tested to be compatible with C99 C,
however it has not been tested with anything other than
gcc, and is not guaranteed to work with other
compilers.</para>

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='you_should_know'><title>YOU SHOULD KNOW</title>
<para>Conky is generally very good on resources. That said,
the more you try to make Conky do, the more resources it is
going to consume.</para>

<para>An easy way to force Conky to reload your ~/.conkyrc:
"killall -SIGUSR1 conky". Saves you the trouble of having
to kill and then restart. You can now also do the same with
SIGHUP.</para>
</refsect1>

<refsect1 id='options'><title>OPTIONS</title>
<para>Command line options override configurations defined in
configuration file.</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-v | -V | --version</option> </term>
  <listitem>
<para>Prints version and exits</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-q | --quiet</option> </term>
  <listitem>
<para>Run Conky in 'quiet mode' (ie. no output)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-D | --debug</option> </term>
  <listitem>
<para>Increase debugging output, ie. -DD for more
debugging</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-a | --alignment=</option> <emphasis remap='B'>ALIGNMENT</emphasis></term>
  <listitem>
<para>Text alignment on screen,
{top,bottom,middle}_{left,right,middle} or none. Can also
be abbreviated with first chars of position, ie. tr for
top_right.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-b | --double-buffer</option> </term>
  <listitem>
<para>Use double buffering (eliminates "flicker")</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-c | --config=</option> <emphasis remap='B'>FILE</emphasis></term>
  <listitem>
<para>Config file to load instead of $HOME/.conkyrc</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-C | --print-config</option> </term>
  <listitem>
<para>Print builtin default config to stdout. See also
the section EXAMPLES for more information.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-d | --daemonize</option> </term>
  <listitem>
<para>Daemonize Conky, aka fork to background</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-f | --font=</option> <emphasis remap='B'>FONT</emphasis></term>
  <listitem>
<para>Font to use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-h | --help</option> </term>
  <listitem>
<para>Prints command line help and exits</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-o | --own-window</option> </term>
  <listitem>
<para>Create own window to draw</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-t | --text=</option> <emphasis remap='B'>TEXT</emphasis></term>
  <listitem>
<para>Text to render, remember single quotes, like -t '
$uptime '</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-p | --pause=</option> <emphasis remap='B'>SECONDS</emphasis></term>
  <listitem>
<para>Time to pause before actually starting Conky</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-u | --interval=</option> <emphasis remap='B'>SECONDS</emphasis></term>
  <listitem>
<para>Update interval</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-w | --window-id=</option> <emphasis remap='B'>WIN_ID</emphasis></term>
  <listitem>
<para>Window id to draw</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-X | --display=</option> <emphasis remap='B'>DISPLAY</emphasis></term>
  <listitem>
<para>X11 display to use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-x</option> <replaceable>X_COORDINATE</replaceable></term>
  <listitem>
<para>X position</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-y</option> <replaceable>Y_COORDINATE</replaceable></term>
  <listitem>
<para>Y position</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-i</option> <replaceable>COUNT</replaceable></term>
  <listitem>
<para>Number of times to update Conky (and quit)</para> 

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='configuration_settings'><title>CONFIGURATION SETTINGS</title>
<para>Default configuration file location is $HOME/.conkyrc or
${sysconfdir}/conky/conky.conf. On most systems, sysconfdir is
/etc, and you can find the sample config file there
(/etc/conky/conky.conf).</para>

<para>You might want to copy it to $HOME/.conkyrc and then
start modifying it. Other configs can be found at
<ulink url='http://conky.sf.net/'>http://conky.sf.net/</ulink></para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>TEXT</emphasis> </term>
  <listitem>
<para>After this begins text to be formatted on screen.
Backslash (&bsol;) escapes newlines in the text section. This
can be useful for cleaning up config files where conky is
used to pipe input to dzen2.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>alignment</emphasis> </term>
  <listitem>
<para>Aligned position on screen, may be top_left,
top_right, top_middle, bottom_left, bottom_right,
bottom_middle, middle_left, middle_middle, middle_right, or
none (also can be abreviated as tl, tr, tm, bl, br, bm, ml,
mm, mr). See also gap_x and gap_y.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>append_file</emphasis> </term>
  <listitem>
<para>Append the file given as argument.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>background</emphasis> </term>
  <listitem>
<para>Boolean value, if true, Conky will be forked to
background when started.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>border_inner_margin</emphasis> </term>
  <listitem>
<para>Inner border margin in pixels (the margin between
the border and text).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>border_outer_margin</emphasis> </term>
  <listitem>
<para>Outer border margin in pixels (the margin between
the border and the edge of the window).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>border_width</emphasis> </term>
  <listitem>
<para>Border width in pixels.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>colorN</emphasis> </term>
  <listitem>
<para>Predefine a color for use inside TEXT segments.
Substitute N by a digit between 0 and 9, inclusively. When
specifying the color value in hex, omit the leading hash
(#).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cpu_avg_samples</emphasis> </term>
  <listitem>
<para>The number of samples to average for CPU
monitoring.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_bar_size</emphasis> </term>
  <listitem>
<para>Specify a default width and height for bars.
Example: 'default_bar_size 0 6'. This is particularly
useful for execbar and execibar as they do not take size
arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_color</emphasis> </term>
  <listitem>
<para>Default color and border color</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_gauge_size</emphasis> </term>
  <listitem>
<para>Specify a default width and height for gauges.
Example: 'default_gauge_size 25 25'. This is particularly
useful for execgauge and execigauge as they do not take
size arguments</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_graph_size</emphasis> </term>
  <listitem>
<para>Specify a default width and height for graphs.
Example: 'default_graph_size 0 25'. This is particularly
useful for execgraph and execigraph as they do not take
size arguments</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_outline_color</emphasis> </term>
  <listitem>
<para>Default outline color</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>default_shade_color</emphasis> </term>
  <listitem>
<para>Default shading color and border's shading color</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>disable_auto_reload</emphasis> </term>
  <listitem>
<para>Enable to disable the inotify-based auto config reload feature.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskio_avg_samples</emphasis> </term>
  <listitem>
<para>The number of samples to average for disk I/O
monitoring.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>display</emphasis> </term>
  <listitem>
<para>Specify an X display to connect to.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>double_buffer</emphasis> </term>
  <listitem>
<para>Use the Xdbe extension? (eliminates flicker) It
is highly recommended to use own window with this one so
double buffer won't be so big.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>draw_borders</emphasis> </term>
  <listitem>
<para>Draw borders around text?</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>draw_graph_borders</emphasis> </term>
  <listitem>
<para>Draw borders around graphs?</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>draw_outline</emphasis> </term>
  <listitem>
<para>Draw outlines?</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>draw_shades</emphasis> </term>
  <listitem>
<para>Draw shades?</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>extra_newline</emphasis> </term>
  <listitem>
<para>Put an extra newline at the end when writing to
stdout, useful for writing to awesome's wiboxes.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>font</emphasis> </term>
  <listitem>
<para>Font name in X, xfontsel can be used to get a
nice font</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>format_human_readable</emphasis> </term>
  <listitem>
<para>If enabled, values which are in bytes will be
printed in human readable format (i.e., KiB, MiB, etc). If
disabled, the number of bytes is printed instead.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>gap_x</emphasis> </term>
  <listitem>
<para>Gap, in pixels, between right or left border of
screen, same as passing -x at command line, e.g. gap_x 10.
For other position related stuff, see 'alignment'.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>gap_y</emphasis> </term>
  <listitem>
<para>Gap, in pixels, between top or bottom border of
screen, same as passing -y at command line, e.g. gap_y 10.
For other position related stuff, see 'alignment'.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>hddtemp_host</emphasis> </term>
  <listitem>
<para>Hostname to connect to for hddtemp objects. Defaults
to "127.0.0.1".</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>hddtemp_port</emphasis> </term>
  <listitem>
<para>Port to use for hddtemp connections. Defaults to
7634.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_up_strictness</emphasis> </term>
  <listitem>
<para>How strict should if_up be when testing an
interface for being up? The value is one of up, link or
address, to check for the interface being solely up, being
up and having link or being up, having link and an assigned
IP address.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>imap</emphasis> </term>
  <listitem>
<para>Default global IMAP server. Arguments are: "host
user pass [-i interval (in seconds)] [-f 'folder'] [-p port]
[-e 'command'] [-r retries]". Default port is 143, default
folder is 'INBOX', default interval is 5 minutes, and
default number of retries before giving up is 5. If the
password is supplied as '*', you will be prompted to enter
the password when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>imlib_cache_flush_interval</emphasis> </term>
  <listitem>
<para>Interval (in seconds) to flush Imlib2 cache.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>imlib_cache_size</emphasis> </term>
  <listitem>
<para>Imlib2 image cache size, in bytes. Defaults to
4MiB. Increase this value if you use $image lots. Set
to 0 to disable the image cache.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_draw_hook_post</emphasis> <emphasis remap='B'>function_name [function arguments]</emphasis></term>
  <listitem>
<para>This function, if defined, will be called by
Conky through each iteration after drawing to the
window. Requires X support. Takes any number of
optional arguments. Use this hook for drawing things on
top of what Conky draws. Conky puts 'conky_' in front
of function_name to prevent accidental calls to the
wrong function unless you place 'conky_' in front of it
yourself.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_draw_hook_pre</emphasis> <emphasis remap='B'>function_name [function arguments]</emphasis></term>
  <listitem>
<para>This function, if defined, will be called by
Conky through each iteration before drawing to the
window. Requires X support. Takes any number of
optional arguments. Use this hook for drawing things on
top of what Conky draws. Conky puts 'conky_' in front
of function_name to prevent accidental calls to the
wrong function unless you place 'conky_' in front of it
yourself.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_load</emphasis> </term>
  <listitem>
<para>Loads the Lua scripts separated by spaces.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_shutdown_hook</emphasis> <emphasis remap='B'>function_name [function arguments]</emphasis></term>
  <listitem>
<para>This function, if defined, will be called by
Conky at shutdown or when the configuration is
reloaded. Use this hook to clean up after yourself,
such as freeing memory which has been allocated by
external libraries via Lua. Conky puts 'conky_' in
front of function_name to prevent accidental calls to
the wrong function unless you place 'conky_' in
front of it yourself.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_startup_hook</emphasis> <emphasis remap='B'>function_name [function arguments]</emphasis></term>
  <listitem>
<para>This function, if defined, will be called by
Conky at startup or when the configuration is reloaded.
Use this hook to initialize values, or for any run-once
applications. Conky puts 'conky_' in front of
function_name to prevent accidental calls to the wrong
function unless you place 'conky_' in front of
it yourself.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mail_spool</emphasis> </term>
  <listitem>
<para>Mail spool for mail checking</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>max_port_monitor_connections</emphasis> </term>
  <listitem>
<para>Allow each port monitor to track at most this
many connections (if 0 or not set, default is 256)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>max_specials</emphasis> </term>
  <listitem>
<para>Maximum number of special things, e.g. fonts,
offsets, aligns, etc. (default is 512)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>max_text_width</emphasis> <emphasis remap='B'>width</emphasis></term>
  <listitem>
<para>When a line in the output contains 'width'
chars and the end isn't reached, the next char will start
on a new line. If you want to make sure that lines don't
get broken, set 'width' to 0</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>max_user_text</emphasis> <emphasis remap='B'>bytes</emphasis></term>
  <listitem>
<para>Maximum size of user text buffer, i.e. layout
below TEXT line in config file (default is 16384 bytes)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>maximum_width</emphasis> <emphasis remap='B'>pixels</emphasis></term>
  <listitem>
<para>Maximum width of window</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>minimum_size</emphasis> <emphasis remap='B'>width (height)</emphasis></term>
  <listitem>
<para>Minimum size of window</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_host</emphasis> </term>
  <listitem>
<para>Host of MPD server</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_password</emphasis> </term>
  <listitem>
<para>MPD server password</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_port</emphasis> </term>
  <listitem>
<para>Port of MPD server</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>music_player_interval</emphasis> </term>
  <listitem>
<para>Music player thread update interval (defaults to
Conky's update interval)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>net_avg_samples</emphasis> </term>
  <listitem>
<para>The number of samples to average for net data</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>no_buffers</emphasis> </term>
  <listitem>
<para>Subtract (file system) buffers from used memory?</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>nvidia_display</emphasis> </term>
  <listitem>
<para>The display that the nvidia variable will use (defaults to the value of the
display variable)</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>out_to_console</emphasis> </term>
  <listitem>
<para>Print text to stdout.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>out_to_ncurses</emphasis> </term>
  <listitem>
<para>Print text in the console, but use ncurses so
that conky can print the text of a new update over the old
text. (In the future this will provide more useful things)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>out_to_stderr</emphasis> </term>
  <listitem>
<para>Print text to stderr.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>out_to_x</emphasis> </term>
  <listitem>
<para>When set to no, there will be no output in X
(useful when you also use things like out_to_console). If
you set it to no, make sure that it's placed before all
other X-related setting (take the first line of your
configfile to be sure). Default value is yes</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>override_utf8_locale</emphasis> </term>
  <listitem>
<para>Force UTF8? requires XFT</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>overwrite_file</emphasis> </term>
  <listitem>
<para>Overwrite the file given as argument.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window</emphasis> </term>
  <listitem>
<para>Boolean, create own window to draw?</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_class</emphasis> </term>
  <listitem>
<para>Manually set the WM_CLASS name. Defaults to
"Conky".</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_colour</emphasis> <emphasis remap='B'>colour</emphasis></term>
  <listitem>
<para>If own_window_transparent no, set a specified
background colour (defaults to black). Takes either a hex
value (e.g. ffffff, note the lack of '#') or a valid RGB
name (see /usr/lib/X11/rgb.txt)</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_hints</emphasis> <emphasis remap='B'>undecorated,below,above,sticky,skip_taskbar,skip_pager</emphasis></term>
  <listitem>
<para>If own_window is yes, you may use these window
manager hints to affect the way Conky displays. Notes: Use
own_window_type desktop as another way to implement many of
these hints implicitly. If you use own_window_type
override, window manager hints have no meaning and are
ignored.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_title</emphasis> </term>
  <listitem>
<para>Manually set the window name. Defaults to
"&lt;hostname&gt; - conky".</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_argb_visual</emphasis> </term>
  <listitem>
<para>Boolean, use ARGB visual? ARGB can be used for real
transparency, note that a composite manager is required for real
transparency. This option will not work as desired (in most cases)
in conjunction with 'own_window_type override'.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_argb_value</emphasis> </term>
  <listitem>
<para>When ARGB visuals are enabled, this use this to modify the alpha value used. Valid range is 0-255, where 0 is 0% opacity, and 255 is 100% opacity.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_transparent</emphasis> </term>
  <listitem>
<para>Boolean, set transparency? If ARGB visual is enabled, sets
background opacity to 0%.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>own_window_type</emphasis> </term>
  <listitem>
<para>if own_window is yes, you may specify type
normal, desktop, dock, panel or override (default: normal).
Desktop windows are special windows that have no window
decorations; are always visible on your desktop; do not
appear in your pager or taskbar; and are sticky across all
workspaces. Panel windows reserve space along a desktop
edge, just like panels and taskbars, preventing maximized
windows from overlapping them. The edge is chosen based on
the alignment option. Override windows are not under the
control of the window manager. Hints are ignored. This type
of window can be useful for certain situations.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pad_percents</emphasis> </term>
  <listitem>
<para>Pad percentages to this many decimals (0 = no
padding)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pop3</emphasis> </term>
  <listitem>
<para>Default global POP3 server. Arguments are: "host
user pass [-i interval (in seconds)] [-p port] [-e 'command']
[-r retries]". Default port is 110, default interval is 5
minutes, and default number of retries before giving up is
5. If the password is supplied as '*', you will be prompted
to enter the password when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>short_units</emphasis> </term>
  <listitem>
<para>Shortens units to a single character (kiB-&gt;k,
GiB-&gt;G, etc.). Default is off.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>show_graph_range</emphasis> </term>
  <listitem>
<para>Shows the time range covered by a graph.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>show_graph_scale</emphasis> </term>
  <listitem>
<para>Shows the maximum value in scaled graphs.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>stippled_borders</emphasis> </term>
  <listitem>
<para>Border stippling (dashing) in pixels</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>temperature_unit</emphasis> </term>
  <listitem>
<para>Desired output unit of all objects displaying a
temperature. Parameters are either "fahrenheit" or
"celsius". The default unit is degree Celsius.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>templateN</emphasis> </term>
  <listitem>
<para>Define a template for later use inside TEXT
segments. Substitute N by a digit between 0 and 9,
inclusively. The value of the variable is being inserted
into the stuff below TEXT at the corresponding position,
but before some substitutions are applied:</para> 

<para>'&bsol;n' -&gt; newline
<!-- br -->
'&bsol;&bsol;' -&gt; backslash
<!-- br -->
'&bsol; ' -&gt; space
<!-- br -->
'&bsol;N' -&gt; template argument N</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>text_buffer_size</emphasis> <emphasis remap='B'>bytes</emphasis></term>
  <listitem>
<para>Size of the standard text buffer (default is 256
bytes). This buffer is used for intermediary text, such as
individual lines, output from $exec vars, and various other
variables. Increasing the size of this buffer can
drastically reduce Conky's performance, but will allow for
more text display per variable. The size of this buffer
cannot be smaller than the default value of 256 bytes.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>times_in_seconds</emphasis> </term>
  <listitem>
<para>If true, variables that output times output a number
that represents seconds. This doesn't affect $time, $tztime and
$utime</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top_cpu_separate</emphasis> </term>
  <listitem>
<para>If true, cpu in top will show usage of one
processor's power. If false, cpu in top will show the usage
of all processors' power combined.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top_name_width</emphasis> </term>
  <listitem>
<para>Width for $top name value (defaults to 15
characters).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>total_run_times</emphasis> </term>
  <listitem>
<para>Total number of times for Conky to update before
quitting. Zero makes Conky run forever</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>update_interval</emphasis> <emphasis remap='B'>seconds</emphasis></term>
  <listitem>
<para>Update interval</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>update_interval_on_battery</emphasis> <emphasis remap='B'>seconds</emphasis></term>
  <listitem>
<para>Update interval when running on batterypower</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>uppercase</emphasis> </term>
  <listitem>
<para>Boolean value, if true, text is rendered in upper
case</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>use_spacer</emphasis> </term>
  <listitem>
<para>Adds spaces around certain objects to stop them
from moving other things around. Arguments are left, right,
and none (default). The old true/false values are
deprecated and default to right/none respectively. Note
that this only helps if you are using a mono font, such as
Bitstream Vera Sans Mono.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>use_xft</emphasis> </term>
  <listitem>
<para>Use Xft (anti-aliased font and stuff)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xftalpha</emphasis> </term>
  <listitem>
<para>Alpha of Xft font. Must be a value at or between
1 and 0.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xftfont</emphasis> </term>
  <listitem>
<para>Xft font to use.</para> 

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='objectsvariables'><title>OBJECTS/VARIABLES</title>
<para>Colours are parsed using XParsecolor(), there might be a
list of them: /usr/share/X11/rgb.txt. 
Colour can be also in
#rrggbb format (hex).</para>

<para>Some objects may create threads, and sometimes these threads will
not be destroyed until Conky terminates. There is no way to
destroy or clean up threads while Conky is running. For example,
if you use an MPD variable, the MPD thread will keep running until
Conky dies. Some threaded objects will use one of the parameters
as a 'key', so that you only have 1 relevant thread running (for
example, the $curl, $rss and $weather objects launch one thread per
URI).</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>acpiacadapter</emphasis> <emphasis remap='B'>(adapter)</emphasis></term>
  <listitem>
<para>ACPI ac adapter state. On linux, the adapter option specifies the
subfolder of /sys/class/power_supply containing the state information (tries "AC"
and "ADP1" if there is no argument given). Non-linux systems ignore it.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>acpifan</emphasis> </term>
  <listitem>
<para>ACPI fan state</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>acpitemp</emphasis> </term>
  <listitem>
<para>ACPI temperature in C.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>addr</emphasis> <emphasis remap='B'>(interface)</emphasis></term>
  <listitem>
<para>IP address for an interface, or "No Address" if
no address is assigned.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>addrs</emphasis> <emphasis remap='B'>(interface)</emphasis></term>
  <listitem>
<para>IP addresses for an interface (if one - works
like addr). Linux only.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>adt746xcpu</emphasis> </term>
  <listitem>
<para>CPU temperature from therm_adt746x</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>adt746xfan</emphasis> </term>
  <listitem>
<para>Fan speed from therm_adt746x</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>alignc</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Align text to centre</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>alignr</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Right-justify text, with space of N</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd</emphasis> <emphasis remap='B'>host</emphasis> <emphasis remap='B'>port</emphasis></term>
  <listitem>
<para>Sets up the connection to apcupsd daemon. Prints
nothing, defaults to localhost:3551</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_cable</emphasis> </term>
  <listitem>
<para>Prints the UPS connection type.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_charge</emphasis> </term>
  <listitem>
<para>Current battery capacity in percent.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_lastxfer</emphasis> </term>
  <listitem>
<para>Reason for last transfer from line to battery.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_linev</emphasis> </term>
  <listitem>
<para>Nominal input voltage.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_load</emphasis> </term>
  <listitem>
<para>Current load in percent.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_loadbar</emphasis> </term>
  <listitem>
<para>Bar showing current load.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_loadgauge</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Gauge that shows current load.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_loadgraph</emphasis> <emphasis remap='B'>(height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>History graph of current load.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_model</emphasis> </term>
  <listitem>
<para>Prints the model of the UPS.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_name</emphasis> </term>
  <listitem>
<para>Prints the UPS user-defined name.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_status</emphasis> </term>
  <listitem>
<para>Prints current status (on-line, on-battery).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_temp</emphasis> </term>
  <listitem>
<para>Current internal temperature.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_timeleft</emphasis> </term>
  <listitem>
<para>Time left to run on battery.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apcupsd_upsmode</emphasis> </term>
  <listitem>
<para>Prints the UPS mode (e.g. standalone).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apm_adapter</emphasis> </term>
  <listitem>
<para>Display APM AC adapter status (FreeBSD only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apm_battery_life</emphasis> </term>
  <listitem>
<para>Display APM battery life in percent (FreeBSD
only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>apm_battery_time</emphasis> </term>
  <listitem>
<para>Display remaining APM battery life in hh:mm:ss or
"unknown" if AC adapterstatus is on-line or charging
(FreeBSD only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_bar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Progress bar</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_bitrate</emphasis> </term>
  <listitem>
<para>Bitrate of current tune</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_channels</emphasis> </term>
  <listitem>
<para>Number of audio channels of current tune</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_filename</emphasis> </term>
  <listitem>
<para>Full path and filename of current tune</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_frequency</emphasis> </term>
  <listitem>
<para>Sampling frequency of current tune</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_length</emphasis> </term>
  <listitem>
<para>Total length of current tune as MM:SS</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_length_seconds</emphasis> </term>
  <listitem>
<para>Total length of current tune in seconds</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_main_volume</emphasis> </term>
  <listitem>
<para>The current volume fetched from Audacious</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_playlist_length</emphasis> </term>
  <listitem>
<para>Number of tunes in playlist</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_playlist_position</emphasis> </term>
  <listitem>
<para>Playlist position of current tune</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_position</emphasis> </term>
  <listitem>
<para>Position of current tune (MM:SS)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_position_seconds</emphasis> </term>
  <listitem>
<para>Position of current tune in seconds</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_status</emphasis> </term>
  <listitem>
<para>Player status (Playing/Paused/Stopped/Not
running)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>audacious_title</emphasis> <emphasis remap='B'>(max length)</emphasis></term>
  <listitem>
<para>Title of current tune with optional maximum
length specifier</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>battery</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Battery status and remaining percentage capacity
of ACPI or APM battery. ACPI battery number can be given as
argument (default is BAT0).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>battery_bar</emphasis> <emphasis remap='B'>(height),(width) (num)</emphasis></term>
  <listitem>
<para>Battery percentage remaining of ACPI battery in a
bar. ACPI battery number can be given as argument (default
is BAT0).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>battery_percent</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Battery percentage remaining for ACPI battery.
ACPI battery number can be given as argument (default is
BAT0).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>battery_short</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Battery status and remaining percentage capacity
of ACPI or APM battery. ACPI battery number can be given as
argument (default is BAT0). This mode display a short
status, which means that C is displayed instead of
charging, D for discharging, F for full, N for not present,
E for empty and U for unknown.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>battery_time</emphasis> <emphasis remap='B'>(num)</emphasis></term>
  <listitem>
<para>Battery charge/discharge time remaining of ACPI
battery. ACPI battery number can be given as argument
(default is BAT0).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>blink</emphasis> <emphasis remap='B'>text_and_other_conky_vars</emphasis></term>
  <listitem>
<para>Let 'text_and_other_conky_vars' blink on and off.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_album</emphasis> </term>
  <listitem>
<para>Album in current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_artist</emphasis> </term>
  <listitem>
<para>Artist in current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_bitrate</emphasis> </term>
  <listitem>
<para>Bitrate of the current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_title</emphasis> </term>
  <listitem>
<para>Title of the current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_track</emphasis> </term>
  <listitem>
<para>Track number of the current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bmpx_uri</emphasis> </term>
  <listitem>
<para>URI of the current BMPx track</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>buffers</emphasis> </term>
  <listitem>
<para>Amount of memory buffered</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cached</emphasis> </term>
  <listitem>
<para>Amount of memory cached</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cmdline_to_pid</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>PID of the first process that has string in it's
commandline</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>color</emphasis> <emphasis remap='B'>(color)</emphasis></term>
  <listitem>
<para>Change drawing color to 'color' which is a name of
a color or a hexcode preceded with # (for example #0A1B2C ).
If you use ncurses only the following colors are supported:
red,green,yellow,blue,magenta,cyan,black,white.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>colorN</emphasis> </term>
  <listitem>
<para>Change drawing color to colorN configuration
option, where N is a digit between 0 and 9, inclusively.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>combine</emphasis> <emphasis remap='B'>var1 var2</emphasis></term>
  <listitem>
<para>Places the lines of var2 to the right of the
lines of var1 separated by the chars that are put between
var1 and var2. For example: ${combine ${head /proc/cpuinfo
2} - ${head /proc/meminfo 1}} gives as output
"cpuinfo_line1 - meminfo_line1" on line 1 and
"cpuinfo_line2 -" on line 2. $combine vars can also be
nested to place more vars next to each other.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_build_arch</emphasis> </term>
  <listitem>
<para>CPU architecture Conky was built for</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_build_date</emphasis> </term>
  <listitem>
<para>Date Conky was built</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_version</emphasis> </term>
  <listitem>
<para>Conky version</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cpu</emphasis> <emphasis remap='B'>(cpuN)</emphasis></term>
  <listitem>
<para>CPU usage in percents. For SMP machines, the CPU
number can be provided as an argument. ${cpu cpu0} is the
total usage, and ${cpu cpuX} (X &gt;= 1) are individual
CPUs.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cpubar</emphasis> <emphasis remap='B'>(cpuN) (height),(width)</emphasis></term>
  <listitem>
<para>Bar that shows CPU usage, height is bar's height
in pixels. See $cpu for more info on SMP.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cpugauge</emphasis> <emphasis remap='B'>(cpuN) (height),(width)</emphasis></term>
  <listitem>
<para>Elliptical gauge that shows CPU usage, height and
width are gauge's vertical and horizontal axis
respectively. See $cpu for more info on SMP.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cpugraph</emphasis> <emphasis remap='B'>(cpuN) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>CPU usage graph, with optional colours in hex,
minus the #. See $cpu for more info on SMP. Uses a
logarithmic scale (to see small numbers) when you use the
-l switch. Takes the switch '-t' to use a temperature
gradient, which makes the gradient values change depending
on the amplitude of a particular graph value (try it and
see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>curl</emphasis> <emphasis remap='B'>url (interval_in_minutes)</emphasis></term>
  <listitem>
<para>Download data from URI using Curl at the
specified interval. The interval may be a floating
point value greater than 0, otherwise defaults to 15
minutes. Most useful when used in conjunction with Lua
and the Lua API. This object is threaded, and once a
thread is created it can't be explicitly destroyed.
One thread will run for each URI specified. You can use
any protocol that Curl supports.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>desktop</emphasis> </term>
  <listitem>
<para>Number of the desktop on which conky is running
or the message "Not running in X" if this is the case.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>desktop_name</emphasis> </term>
  <listitem>
<para>Name of the desktop on which conky is running or
the message "Not running in X" if this is the case.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>desktop_number</emphasis> </term>
  <listitem>
<para>Number of desktops or the message "Not running in
X" if this is the case.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>disk_protect</emphasis> <emphasis remap='B'>device</emphasis></term>
  <listitem>
<para>Disk protection status, if supported (needs
kernel-patch). Prints either "frozen" or "free " (note the
padding).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskio</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays current disk IO. Device is optional, and
takes the form of sda for /dev/sda. Individual partitions
are allowed.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskio_read</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays current disk IO for reads. Device as in
diskio.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskio_write</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays current disk IO for writes. Device as in
diskio.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskiograph</emphasis> <emphasis remap='B'>(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Disk IO graph, colours defined in hex, minus the
#. If scale is non-zero, it becomes the scale for the
graph. Uses a logarithmic scale (to see small numbers) when
you use -l switch. Takes the switch '-t' to use a
temperature gradient, which makes the gradient values
change depending on the amplitude of a particular graph
value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskiograph_read</emphasis> <emphasis remap='B'>(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Disk IO graph for reads, colours defined in hex,
minus the #. If scale is non-zero, it becomes the scale for
the graph. Device as in diskio. Uses a logarithmic scale
(to see small numbers) when you use -l switch. Takes the
switch '-t' to use a temperature gradient, which makes the
gradient values change depending on the amplitude of a
particular graph value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>diskiograph_write</emphasis> <emphasis remap='B'>(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Disk IO graph for writes, colours defined in hex,
minus the #. If scale is non-zero, it becomes the scale for
the graph. Device as in diskio. Uses a logarithmic scale
(to see small numbers) when you use -l switch. Takes the
switch '-t' to use a temperature gradient, which makes the
gradient values change depending on the amplitude of a
particular graph value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>downspeed</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Download speed in suitable IEC units</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>downspeedf</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Download speed in KiB with one decimal</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>downspeedgraph</emphasis> <emphasis remap='B'>(netdev) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Download speed graph, colours defined in hex,
minus the #. If scale is non-zero, it becomes the scale for
the graph. Uses a logarithmic scale (to see small numbers)
when you use -l switch. Takes the switch '-t' to use a
temperature gradient, which makes the gradient values
change depending on the amplitude of a particular graph
value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>draft_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as draft in the specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>else</emphasis> </term>
  <listitem>
<para>Text to show if any of the above are not true</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>endif</emphasis> </term>
  <listitem>
<para>Ends an $if block.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>entropy_avail</emphasis> </term>
  <listitem>
<para>Current entropy available for crypto freaks</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>entropy_bar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Normalized bar of available entropy for crypto
freaks</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>entropy_perc</emphasis> </term>
  <listitem>
<para>Percentage of entropy available in comparison to
the poolsize</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>entropy_poolsize</emphasis> </term>
  <listitem>
<para>Total size of system entropy pool for crypto
freaks</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>eval</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>Evaluates given string according to the rules of
TEXT interpretation, i.e. parsing any contained text object
specifications into their output, any occuring '$$' into a
single '$' and so on. The output is then being parsed
again.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>eve</emphasis> <emphasis remap='B'>api_userid api_key character_id</emphasis></term>
  <listitem>
<para>Fetches your currently training skill from the
Eve Online API servers (<ulink url='http://www.eve-online.com/'>http://www.eve-online.com/</ulink>) and
displays the skill along with the remaining training time.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>exec</emphasis> <emphasis remap='B'>command</emphasis></term>
  <listitem>
<para>Executes a shell command and displays the output
in conky. warning: this takes a lot more resources than
other variables. I'd recommend coding wanted behaviour in C
and posting a patch.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execbar</emphasis> <emphasis remap='B'>command</emphasis></term>
  <listitem>
<para>Same as exec, except if the first value return is
a value between 0-100, it will use that number for a bar.
The size for bars can be controlled via the
default_bar_size config setting.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execgauge</emphasis> <emphasis remap='B'>command</emphasis></term>
  <listitem>
<para>Same as exec, except if the first value returned
is a value between 0-100, it will use that number for a
gauge. The size for gauges can be controlled via the
default_gauge_size config setting.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execgraph</emphasis> <emphasis remap='B'>(-t) (-l) command</emphasis></term>
  <listitem>
<para>Same as execbar, but graphs values. Uses a
logaritmic scale when the log option (-l switch) is given
(to see small numbers). Values still have to be between 0
and 100. The size for graphs can be controlled via the
default_graph_size config setting. Takes the switch '-t' to
use a temperature gradient, which makes the gradient values
change depending on the amplitude of a particular graph
value (try it and see). If -t or -l is your first argument,
you may need to preceed it by a space (' ').</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execi</emphasis> <emphasis remap='B'>interval command</emphasis></term>
  <listitem>
<para>Same as exec but with specific interval. Interval
can't be less than update_interval in configuration. See
also $texeci</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execibar</emphasis> <emphasis remap='B'>interval command</emphasis></term>
  <listitem>
<para>Same as execbar, except with an interval</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execigauge</emphasis> <emphasis remap='B'>interval command</emphasis></term>
  <listitem>
<para>Same as execgauge, but takes an interval arg and
gauges values.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execigraph</emphasis> <emphasis remap='B'>interval (-t) (-l) command</emphasis></term>
  <listitem>
<para>Same as execgraph, but takes an interval arg and
graphs values. If -t or -l is your first argument, you may
need to preceed it by a space (' ').</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execp</emphasis> <emphasis remap='B'>command</emphasis></term>
  <listitem>
<para>Executes a shell command and displays the output
in conky. warning: this takes a lot more resources than
other variables. I'd recommend coding wanted behaviour in C
and posting a patch. This differs from $exec in that it
parses the output of the command, so you can insert things
like ${color red}hi!${color} in your script and have it
correctly parsed by Conky. Caveats: Conky parses and
evaluates the output of $execp every time Conky loops, and
then destroys all the objects. If you try to use anything
like $execi within an $execp statement, it will
functionally run at the same interval that the $execp
statement runs, as it is created and destroyed at every
interval.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>execpi</emphasis> <emphasis remap='B'>interval command</emphasis></term>
  <listitem>
<para>Same as execp but with specific interval.
Interval can't be less than update_interval in
configuration. Note that the output from the $execpi
command is still parsed and evaluated at every interval.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>flagged_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as flagged in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>font</emphasis> <emphasis remap='B'>(font)</emphasis></term>
  <listitem>
<para>Specify a different font. This new font will
apply to the current line and everything following. You can
use a $font with no arguments to change back to the default
font (much like with $color)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>format_time</emphasis> <emphasis remap='B'>seconds format</emphasis></term>
  <listitem>
<para>Format time given in seconds. This var only works when
the times_in_seconds configuration setting is on. Format is a string
that should start and end with a "-char. The "-chars are not
part of the output, &bsol;w,&bsol;d,&bsol;h,&bsol;m,&bsol;s,&bsol;(,&bsol;) and &bsol;&bsol; are replaced by
weeks,days,hours,minutes,seconds,(,) and &bsol;. If you leave out a unit,
it's value will be expressed in the highest unite lower then the
one left out. Text between ()-chars will not be visible if a
replaced unit in this text is 0. If seconds is a decimal number
then you can see the numbers behind the point by using &bsol;S
followed by a number that specifies the amount of
digits behind the point that you want to see (maximum 9).
You can also place a 'x' behind &bsol;S so you have all digits behind
the point and no trailing zero's. (also maximum 9)</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>forwarded_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as forwarded in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>freq</emphasis> <emphasis remap='B'>(n)</emphasis></term>
  <listitem>
<para>Returns CPU #n's frequency in MHz. CPUs are
counted from 1. If omitted, the parameter defaults to 1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>freq_g</emphasis> <emphasis remap='B'>(n)</emphasis></term>
  <listitem>
<para>Returns CPU #n's frequency in GHz. CPUs are
counted from 1. If omitted, the parameter defaults to 1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_bar</emphasis> <emphasis remap='B'>(height),(width) fs</emphasis></term>
  <listitem>
<para>Bar that shows how much space is used on a file
system. height is the height in pixels. fs is any file on
that file system.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_bar_free</emphasis> <emphasis remap='B'>(height),(width) fs</emphasis></term>
  <listitem>
<para>Bar that shows how much space is free on a file
system. height is the height in pixels. fs is any file on
that file system.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_free</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>Free space on a file system available for users.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_free_perc</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>Free percentage of space on a file system
available for users.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_size</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>File system size.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_type</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>File system type.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_used</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>File system used space.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>fs_used_perc</emphasis> <emphasis remap='B'>(fs)</emphasis></term>
  <listitem>
<para>Percent of file system used space.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>goto</emphasis> <emphasis remap='B'>x</emphasis></term>
  <listitem>
<para>The next element will be printed at position 'x'.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>gw_iface</emphasis> </term>
  <listitem>
<para>Displays the default route's interface or
"multiple"/"none" accordingly.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>gw_ip</emphasis> </term>
  <listitem>
<para>Displays the default gateway's IP or
"multiple"/"none" accordingly.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>hddtemp</emphasis> <emphasis remap='B'>(dev)</emphasis></term>
  <listitem>
<para>Displays temperature of a selected hard disk
drive as reported by the hddtemp daemon. Use hddtemp_host
and hddtemp_port to specify a host and port for all hddtemp
objects. If no dev parameter is given, the first disk returned
by the hddtemp daemon is used.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>head</emphasis> <emphasis remap='B'>logfile lines (next_check)</emphasis></term>
  <listitem>
<para>Displays first N lines of supplied text file. The
file is checked every 'next_check' update. If next_check is
not supplied, Conky defaults to 2. Max of 30 lines can be
displayed, or until the text buffer is filled.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>hr</emphasis> <emphasis remap='B'>(height)</emphasis></term>
  <listitem>
<para>Horizontal line, height is the height in pixels</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>hwmon</emphasis> <emphasis remap='B'>(dev) type n (factor offset)</emphasis></term>
  <listitem>
<para>Hwmon sensor from sysfs (Linux 2.6). Parameter
dev may be omitted if you have only one hwmon device.
Parameter type is either 'in' or 'vol' meaning voltage;
'fan' meaning fan; 'temp' meaning temperature. Parameter n
is number of the sensor. See /sys/class/hwmon/ on your
local computer. The optional arguments 'factor' and
'offset' allow precalculation of the raw input, which is
being modified as follows: 'input = input * factor +
offset'. Note that they have to be given as decimal values
(i.e. contain at least one decimal place).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i2c</emphasis> <emphasis remap='B'>(dev) type n (factor offset)</emphasis></term>
  <listitem>
<para>I2C sensor from sysfs (Linux 2.6). Parameter dev
may be omitted if you have only one I2C device. Parameter
type is either 'in' or 'vol' meaning voltage; 'fan' meaning
fan; 'temp' meaning temperature. Parameter n is number of
the sensor. See /sys/bus/i2c/devices/ on your local
computer. The optional arguments 'factor' and 'offset'
allow precalculation of the raw input, which is being
modified as follows: 'input = input * factor + offset'.
Note that they have to be given as decimal values (i.e.
contain at least one decimal place).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_ac_status</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays whether ac power is on, as listed in
/proc/i8k (translated to human-readable). Beware that this
is by default not enabled by i8k itself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_bios</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the bios version as listed in /proc/i8k.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_buttons_status</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the volume buttons status as listed in
/proc/i8k.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_cpu_temp</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the cpu temperature in Celsius, as
reported by /proc/i8k.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_left_fan_rpm</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the left fan's rate of rotation, in
revolutions per minute as listed in /proc/i8k. Beware, some
laptops i8k reports these fans in reverse order.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_left_fan_status</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the left fan status as listed in
/proc/i8k (translated to human-readable). Beware, some
laptops i8k reports these fans in reverse order.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_right_fan_rpm</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the right fan's rate of rotation, in
revolutions per minute as listed in /proc/i8k. Beware, some
laptops i8k reports these fans in reverse order.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_right_fan_status</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the right fan status as listed in
/proc/i8k (translated to human-readable). Beware, some
laptops i8k reports these fans in reverse order.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_serial</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays your laptop serial number as listed in
/proc/i8k.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i8k_version</emphasis> </term>
  <listitem>
<para>If running the i8k kernel driver for Inspiron
laptops, displays the version formatting of /proc/i8k.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ibm_brightness</emphasis> </term>
  <listitem>
<para>If running the IBM ACPI, displays the brigtness
of the laptops's LCD (0-7).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ibm_fan</emphasis> </term>
  <listitem>
<para>If running the IBM ACPI, displays the fan speed.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ibm_temps</emphasis> <emphasis remap='B'>N</emphasis></term>
  <listitem>
<para>If running the IBM ACPI, displays the
temperatures from the IBM temperature sensors (N=0..7)
Sensor 0 is on the CPU, 3 is on the GPU.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ibm_volume</emphasis> </term>
  <listitem>
<para>If running the IBM ACPI, displays the "master"
volume, controlled by the volume keys (0-14).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>iconv_start</emphasis> <emphasis remap='B'>codeset_from codeset_to</emphasis></term>
  <listitem>
<para>Convert text from one codeset to another using
GNU iconv. Needs to be stopped with iconv_stop.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>iconv_stop</emphasis> </term>
  <listitem>
<para>Stop iconv codeset conversion.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_empty</emphasis> <emphasis remap='B'>(var)</emphasis></term>
  <listitem>
<para>if conky variable VAR is empty, display
everything between $if_empty and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_existing</emphasis> <emphasis remap='B'>file (string)</emphasis></term>
  <listitem>
<para>if FILE exists, display everything between
if_existing and the matching $endif. The optional second
parameter checks for FILE containing the specified string
and prints everything between $if_existing and the matching
$endif.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_gw</emphasis> </term>
  <listitem>
<para>if there is at least one default gateway, display
everything between $if_gw and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_match</emphasis> <emphasis remap='B'>expression</emphasis></term>
  <listitem>
<para>Evaluates the given boolean expression, printing
everything between $if_match and the matching $endif
depending on whether the evaluation returns true or not.
Valid expressions consist of a left side, an operator and a
right side. Left and right sides are being parsed for
contained text objects before evaluation. Recognised left
and right side types are:</para> 

<para><emphasis remap='B'>double</emphasis>Argument consists of only
digits and a single dot.
<!-- br -->
<emphasis remap='B'>long</emphasis>Argument consists of only
digits.
<!-- br -->
<emphasis remap='B'>string</emphasis>Argument is enclosed in
quotation marks (")</para>

<para>Valid operands are: '&gt;', '&lt;', '&gt;=',
'&lt;=', '==', '!='.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_mixer_mute</emphasis> <emphasis remap='B'>(mixer)</emphasis></term>
  <listitem>
<para>If mixer exists, display everything between
$if_mixer_mute and the matching $endif. If no mixer is
specified, "Vol" is used.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_mounted</emphasis> <emphasis remap='B'>(mountpoint)</emphasis></term>
  <listitem>
<para>if MOUNTPOINT is mounted, display everything
between $if_mounted and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_mpd_playing</emphasis> </term>
  <listitem>
<para>if mpd is playing or paused, display everything
between $if_mpd_playing and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_running</emphasis> <emphasis remap='B'>(process)</emphasis></term>
  <listitem>
<para>if PROCESS is running, display everything
$if_running and the matching $endif. This uses the
&ldquo;pidof&rdquo; command, so the -x switch is also supported.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_smapi_bat_installed</emphasis> <emphasis remap='B'>(INDEX)</emphasis></term>
  <listitem>
<para>when using smapi, if the battery with index INDEX
is installed, display everything between
$if_smapi_bat_installed and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_up</emphasis> <emphasis remap='B'>(interface)</emphasis></term>
  <listitem>
<para>if INTERFACE exists and is up, display everything
between $if_up and the matching $endif</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_updatenr</emphasis> <emphasis remap='B'>(updatenr)</emphasis></term>
  <listitem>
<para>If it's the UPDATENR-th time that conky updates,
display everything between $if_updatenr and the matching
$endif. The counter resets when the highest UPDATENR is
reached. Example : "{$if_updatenr 1}foo$endif{$if_updatenr
2}bar$endif{$if_updatenr 4}$endif" shows foo 25% of the
time followed by bar 25% of the time followed by nothing
the other half of the time.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>if_xmms2_connected</emphasis> </term>
  <listitem>
<para>Display everything between $if_xmms2_connected
and the matching $endif if xmms2 is running.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>image</emphasis> <emphasis remap='B'>&lt;path to image&gt; (-p x,y) (-s WxH) (-n) (-f interval)</emphasis></term>
  <listitem>
<para>Renders an image from the path specified using
Imlib2. Takes 4 optional arguments: a position, a size, a
no-cache switch, and a cache flush interval. Changing the
x,y position will move the position of the image, and
changing the WxH will scale the image. If you specify the
no-cache flag (-n), the image will not be cached.
Alternately, you can specify the -f int switch to specify a
cache flust interval for a particular image. Example:
${image /home/brenden/cheeseburger.jpg -p 20,20 -s 200x200}
will render 'cheeseburger.jpg' at (20,20) scaled to 200x200
pixels. Conky does not make any attempt to adjust the
position (or any other formatting) of images, they are just
rendered as per the arguments passed. The only reason
$image is part of the TEXT section, is to allow for runtime
modifications, through $execp $lua_parse, or some other
method.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>imap_messages</emphasis> <emphasis remap='B'>(args)</emphasis></term>
  <listitem>
<para>Displays the number of messages in your global
IMAP inbox by default. You can define individual IMAP
inboxes separately by passing arguments to this object.
Arguments are: "host user pass [-i interval (in seconds)]
[-f 'folder'] [-p port] [-e 'command'] [-r retries]". Default
port is 143, default folder is 'INBOX', default interval is
5 minutes, and default number of retries before giving up
is 5. If the password is supplied as '*', you will be
prompted to enter the password when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>imap_unseen</emphasis> <emphasis remap='B'>(args)</emphasis></term>
  <listitem>
<para>Displays the number of unseen messages in your
global IMAP inbox by default. You can define individual
IMAP inboxes separately by passing arguments to this
object. Arguments are: "host user pass [-i interval (in
seconds)] [-f 'folder'] [-p port] [-e 'command'] [-r retries]".
Default port is 143, default folder is 'INBOX', default
interval is 5 minutes, and default number of retries before
giving up is 5. If the password is supplied as '*', you
will be prompted to enter the password when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>include</emphasis> <emphasis remap='B'>path</emphasis></term>
  <listitem>
<para>Loads the configfile at path, places the
configsettings behind the configsettings in the orginal
config and places the vars where the includevar
stood.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ioscheduler</emphasis> <emphasis remap='B'>disk</emphasis></term>
  <listitem>
<para>Prints the current ioscheduler used for the given
disk name (i.e. e.g. "hda" or "sdb")</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>kernel</emphasis> </term>
  <listitem>
<para>Kernel version</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>laptop_mode</emphasis> </term>
  <listitem>
<para>The value of /proc/sys/vm/laptop_mode</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lines</emphasis> <emphasis remap='B'>textfile</emphasis></term>
  <listitem>
<para>Displays the number of lines in the given file</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>loadavg</emphasis> <emphasis remap='B'>(1|2|3)</emphasis></term>
  <listitem>
<para>System load average, 1 is for past 1 minute, 2
for past 5 minutes and 3 for past 15 minutes. Without argument, prints
all three values separated by whitespace.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>loadgraph</emphasis> <emphasis remap='B'>(height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Load1 average graph, similar to xload, with
optional colours in hex, minus the #. Uses a logarithmic
scale (to see small numbers) when you use the -l switch.
Takes the switch '-t' to use a temperature gradient, which
makes the gradient values change depending on the amplitude
of a particular graph value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua</emphasis> <emphasis remap='B'>function_name (function parameters)</emphasis></term>
  <listitem>
<para>Executes a Lua function with given parameters,
then prints the returned string. See also 'lua_load' on how
to load scripts. Conky puts 'conky_' in front of
function_name to prevent accidental calls to the wrong
function unless you put you place 'conky_' in front of it
yourself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_bar</emphasis> <emphasis remap='B'>(height, width) function_name (function parameters)</emphasis></term>
  <listitem>
<para>Executes a Lua function with given parameters and
draws a bar. Expects result value to be an integer between
0 and 100. See also 'lua_load' on how to load scripts.
Conky puts 'conky_' in front of function_name to prevent
accidental calls to the wrong function unless you put you
place 'conky_' in front of it yourself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_gauge</emphasis> <emphasis remap='B'>(height, width) function_name (function parameters)</emphasis></term>
  <listitem>
<para>Executes a Lua function with given parameters and
draws a gauge. Expects result value to be an integer
between 0 and 100. See also 'lua_load' on how to load
scripts. Conky puts 'conky_' in front of function_name to
prevent accidental calls to the wrong function unless you
put you place 'conky_' in front of it yourself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_graph</emphasis> <emphasis remap='B'>function_name (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Executes a Lua function with and draws a graph.
Expects result value to be any number, and by default will
scale to show the full range. See also 'lua_load' on how to
load scripts. Takes the switch '-t' to use a temperature
gradient, which makes the gradient values change depending
on the amplitude of a particular graph value (try it and
see). Conky puts 'conky_' in front of function_name to
prevent accidental calls to the wrong function unless you
put you place 'conky_' in front of it yourself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>lua_parse</emphasis> <emphasis remap='B'>function_name (function parameters)</emphasis></term>
  <listitem>
<para>Executes a Lua function with given parameters as
per $lua, then parses and prints the result value as per
the syntax for Conky's TEXT section. See also 'lua_load' on
how to load scripts. Conky puts 'conky_' in front of
function_name to prevent accidental calls to the wrong
function unless you put you place 'conky_' in front of it
yourself.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>machine</emphasis> </term>
  <listitem>
<para>Machine, i686 for example</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mails</emphasis> <emphasis remap='B'>(mailbox)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Mail count in the specified mailbox or your mail
spool if not. Both mbox and maildir type mailboxes are
supported. You can use a program like fetchmail to get
mails from some server using your favourite protocol. See
also new_mails.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mboxscan</emphasis> <emphasis remap='B'>(-n number of messages to print) (-fw from width) (-sw subject width) mbox</emphasis></term>
  <listitem>
<para>Print a summary of recent messages in an mbox
format mailbox. mbox parameter is the filename of the
mailbox (can be encapsulated using '"', ie. ${mboxscan -n
10 "/home/brenden/some box"}</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mem</emphasis> </term>
  <listitem>
<para>Amount of memory in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>membar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Bar that shows amount of memory in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memeasyfree</emphasis> </term>
  <listitem>
<para>Amount of free memory including the memory that
is very easily freed (buffers/cache)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memfree</emphasis> </term>
  <listitem>
<para>Amount of free memory</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memgauge</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Gauge that shows amount of memory in use (see
cpugauge)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memgraph</emphasis> <emphasis remap='B'>(height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Memory usage graph. Uses a logarithmic scale (to
see small numbers) when you use the -l switch. Takes the
switch '-t' to use a temperature gradient, which makes the
gradient values change depending on the amplitude of a
particular graph value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memmax</emphasis> </term>
  <listitem>
<para>Total amount of memory</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>memperc</emphasis> </term>
  <listitem>
<para>Percentage of memory in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixer</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Prints the mixer value as reported by the OS.
On Linux, this variable uses the OSS emulation, so you
need the proper kernel module loaded.
Default mixer is "Vol", but you can specify one of the
available OSS controls: "Vol", "Bass", "Trebl", "Synth",
"Pcm", "Spkr", "Line", "Mic", "CD", "Mix", "Pcm2 ", "Rec",
"IGain", "OGain", "Line1", "Line2", "Line3", "Digital1",
"Digital2", "Digital3", "PhoneIn", "PhoneOut", "Video",
"Radio" and "Monitor".</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixerbar</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays mixer value in a bar as reported by the
OS. See docs for $mixer for details on arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixerl</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Prints the left channel mixer value as reported
by the OS. See docs for $mixer for details on arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixerlbar</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays the left channel mixer value in a bar as
reported by the OS. See docs for $mixer for details on
arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixerr</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Prints the right channel mixer value as reported
by the OS. See docs for $mixer for details on arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mixerrbar</emphasis> <emphasis remap='B'>(device)</emphasis></term>
  <listitem>
<para>Displays the right channel mixer value in a bar
as reported by the OS. See docs for $mixer for details on
arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_album</emphasis> </term>
  <listitem>
<para>Album of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_artist</emphasis> </term>
  <listitem>
<para>Artist of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_bitrate</emphasis> </term>
  <listitem>
<para>Bitrate in the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_curtime</emphasis> </term>
  <listitem>
<para>Current time of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_file</emphasis> </term>
  <listitem>
<para>File name of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_rate</emphasis> </term>
  <listitem>
<para>Rate of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_song</emphasis> </term>
  <listitem>
<para>The current song name being played in MOC.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_state</emphasis> </term>
  <listitem>
<para>Current state of MOC; playing, stopped etc.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_timeleft</emphasis> </term>
  <listitem>
<para>Time left in the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_title</emphasis> </term>
  <listitem>
<para>Title of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>moc_totaltime</emphasis> </term>
  <listitem>
<para>Total length of the current MOC song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>monitor</emphasis> </term>
  <listitem>
<para>Number of the monitor on which conky is running
or the message "Not running in X" if this is the case.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>monitor_number</emphasis> </term>
  <listitem>
<para>Number of monitors or the message "Not running in
X" if this is the case.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_album</emphasis> </term>
  <listitem>
<para>Album in current MPD song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_artist</emphasis> </term>
  <listitem>
<para>Artist in current MPD song must be enabled at
compile</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_bar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Bar of mpd's progress</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_bitrate</emphasis> </term>
  <listitem>
<para>Bitrate of current song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_date</emphasis> </term>
  <listitem>
<para>Date of current song</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_elapsed</emphasis> </term>
  <listitem>
<para>Song's elapsed time</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_file</emphasis> </term>
  <listitem>
<para>Prints the file name of the current MPD song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_length</emphasis> </term>
  <listitem>
<para>Song's length</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_name</emphasis> </term>
  <listitem>
<para>Prints the MPD name field</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_percent</emphasis> </term>
  <listitem>
<para>Percent of song's progress</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_random</emphasis> </term>
  <listitem>
<para>Random status (On/Off)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_repeat</emphasis> </term>
  <listitem>
<para>Repeat status (On/Off)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_smart</emphasis> <emphasis remap='B'>(max length)</emphasis></term>
  <listitem>
<para>Prints the song name in either the form "artist -
title" or file name, depending on whats available</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_status</emphasis> </term>
  <listitem>
<para>Playing, stopped, et cetera.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_title</emphasis> <emphasis remap='B'>(max length)</emphasis></term>
  <listitem>
<para>Title of current MPD song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_track</emphasis> </term>
  <listitem>
<para>Prints the MPD track field</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>mpd_vol</emphasis> </term>
  <listitem>
<para>MPD's volume</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>nameserver</emphasis> <emphasis remap='B'>(index)</emphasis></term>
  <listitem>
<para>Print a nameserver from /etc/resolv.conf. Index
starts at and defaults to 0.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>new_mails</emphasis> <emphasis remap='B'>(mailbox)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Unread mail count in the specified mailbox or
mail spool if not. Both mbox and maildir type mailboxes are
supported.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>nodename</emphasis> </term>
  <listitem>
<para>Hostname</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>nodename_short</emphasis> </term>
  <listitem>
<para>Short hostname (same as 'hostname -s' shell command).</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>nvidia</emphasis> <emphasis remap='B'>threshold</emphasis> <emphasis remap='B'>temp</emphasis> <emphasis remap='B'>ambient</emphasis> <emphasis remap='B'>gpufreq</emphasis> <emphasis remap='B'>memfreq</emphasis> <emphasis remap='B'>imagequality</emphasis></term>
  <listitem>
<para>Nvidia graficcard support for the XNVCtrl
library. Each option can be shortened to the least
significant part. Temperatures are printed as float, all
other values as integer.</para> 

<para><emphasis remap='B'>threshold</emphasis>
<emphasis remap='B'>The thresholdtemperature at
which the gpu slows down</emphasis>
<!-- br -->
<emphasis remap='B'>temp</emphasis>
<emphasis remap='B'>Gives the gpu current
temperature</emphasis>
<!-- br -->
<emphasis remap='B'>ambient</emphasis>
<emphasis remap='B'>Gives current air temperature near GPU
case</emphasis>
<!-- br -->
<emphasis remap='B'>gpufreq</emphasis>
<emphasis remap='B'>Gives the current gpu frequency</emphasis>
<!-- br -->
<emphasis remap='B'>memfreq</emphasis>
<emphasis remap='B'>Gives the current mem frequency</emphasis>
<!-- br -->
<emphasis remap='B'>imagequality</emphasis>
<emphasis remap='B'>Which imagequality should be chosen by
OpenGL applications</emphasis></para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>offset</emphasis> <emphasis remap='B'>(pixels)</emphasis></term>
  <listitem>
<para>Move text over by N pixels. See also $voffset.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>outlinecolor</emphasis> <emphasis remap='B'>(color)</emphasis></term>
  <listitem>
<para>Change outline color</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pb_battery</emphasis> <emphasis remap='B'>item</emphasis></term>
  <listitem>
<para>If running on Apple powerbook/ibook, display
information on battery status. The item parameter
specifies, what information to display. Exactly one item
must be specified. Valid items are:</para> 

<para><emphasis remap='B'>status</emphasis>
<emphasis remap='B'>Display if battery is fully charged,
charging, discharging or absent (running on
AC)</emphasis>
<!-- br -->
<emphasis remap='B'>percent</emphasis>
<emphasis remap='B'>Display charge of battery in percent, if
charging or discharging. Nothing will be displayed,
if battery is fully charged or absent.</emphasis>
<!-- br -->
<emphasis remap='B'>time</emphasis>
<emphasis remap='B'>Display the time remaining until the
battery will be fully charged or discharged at
current rate. Nothing is displayed, if battery is
absent or if it's present but fully charged and not
discharging.</emphasis></para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_chroot</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Directory used as rootdirectory by the process
(this will be "/" unless the process did a chroot syscall)</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_cmdline</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Command line this process was invoked with</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_cwd</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Current working directory of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_environ</emphasis> <emphasis remap='B'>pid varname</emphasis></term>
  <listitem>
<para>Contents of a environment-var of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_environ_list</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>List of environment-vars that the process can see</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_exe</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Path to executed command that started the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_nice</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The nice value of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_openfiles</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>List of files that the process has open</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_parent</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The pid of the parent of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_priority</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The priority of the process (see 'priority' in "man 5 proc")</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_read</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Total number of bytes read by the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_state</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>State of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_state_short</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>One of the chars in "RSDZTW" representing the state
of the process where R is running, S is sleeping in an
interruptible wait, D is waiting in uninterruptible disk sleep,
Z is zombie, T is traced or stopped (on a signal), and W is paging</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_stderr</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Filedescriptor binded to the STDERR of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_stdin</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Filedescriptor binded to the STDIN of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_stdout</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Filedescriptor binded to the STDOUT of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_threads</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Number of threads in process containing this thread</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_thread_list</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>List with pid's from threads from this process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_time_kernelmode</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Amount of time that the process has been scheduled in kernel mode in seconds</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_time_usermode</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Amount of time that the process has been scheduled in user mode in seconds</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_time</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Sum of $pid_time_kernelmode and $pid_time_usermode</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_uid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The real uid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_euid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The effective uid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_suid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The saved set uid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_fsuid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The file system uid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_gid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The real gid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_egid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The effective gid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_sgid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The saved set gid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_fsgid</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>The file system gid of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmpeak</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Peak virtual memory size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmsize</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Virtual memory size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmlck</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Locked memory size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmhwm</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Peak resident set size ("high water mark") of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmrss</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Resident set size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmdata</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Data segment size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmstk</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Stack segment size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmexe</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Text segment size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmlib</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Shared library code size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_vmpte</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Page table entries size of the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pid_write</emphasis> <emphasis remap='B'>pid</emphasis></term>
  <listitem>
<para>Total number of bytes written by the process</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>platform</emphasis> <emphasis remap='B'>(dev) type n (factor offset)</emphasis></term>
  <listitem>
<para>Platform sensor from sysfs (Linux 2.6). Parameter
dev may be omitted if you have only one platform device.
Platform type is either 'in' or 'vol' meaning voltage;
'fan' meaning fan; 'temp' meaning temperature. Parameter n
is number of the sensor. See /sys/bus/platform/devices/ on
your local computer. The optional arguments 'factor' and
'offset' allow precalculation of the raw input, which is
being modified as follows: 'input = input * factor +
offset'. Note that they have to be given as decimal values
(i.e. contain at least one decimal place).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pop3_unseen</emphasis> <emphasis remap='B'>(args)</emphasis></term>
  <listitem>
<para>Displays the number of unseen messages in your
global POP3 inbox by default. You can define individual
POP3 inboxes separately by passing arguments to this
object. Arguments are: "host user pass [-i interval (in
seconds)] [-p port] [-e 'command'] [-r retries]". Default
port is 110, default interval is 5 minutes, and default
number of retries before giving up is 5. If the password is
supplied as '*', you will be prompted to enter the password
when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pop3_used</emphasis> <emphasis remap='B'>(args)</emphasis></term>
  <listitem>
<para>Displays the amount of space (in MiB, 2^20) used
in your global POP3 inbox by default. You can define
individual POP3 inboxes separately by passing arguments to
this object. Arguments are: "host user pass [-i interval
(in seconds)] [-p port] [-e 'command'] [-r retries]". Default
port is 110, default interval is 5 minutes, and default
number of retries before giving up is 5. If the password is
supplied as '*', you will be prompted to enter the password
when Conky starts.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pre_exec</emphasis> <emphasis remap='B'>shell command</emphasis></term>
  <listitem>
<para>Executes a shell command one time before conky
displays anything and puts output as text.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>processes</emphasis> </term>
  <listitem>
<para>Total processes (sleeping and running)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>read_tcp</emphasis> <emphasis remap='B'>(host) port</emphasis></term>
  <listitem>
<para>Connects to a tcp port on a host (default is
localhost), reads every char available at the moment and
shows them.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>replied_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as replied in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>rss</emphasis> <emphasis remap='B'>uri interval_in_minutes action (num_par (spaces_in_front))</emphasis></term>
  <listitem>
<para>Download and parse RSS feeds. The interval may be
a floating point value greater than 0, otherwise
defaults to 15 minutes. Action may be one of the
following: feed_title, item_title (with num par),
item_desc (with num par) and item_titles (when using
this action and spaces_in_front is given conky places
that many spaces in front of each item). This object is
threaded, and once a thread is created it can't be
explicitly destroyed. One thread will run for each URI
specified. You can use any protocol that Curl
supports.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>running_processes</emphasis> </term>
  <listitem>
<para>Running processes (not sleeping), requires Linux
2.6</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>running_threads</emphasis> </term>
  <listitem>
<para>Number of running (runnable) threads. Linux only.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>scroll</emphasis> <emphasis remap='B'>length (step) text</emphasis></term>
  <listitem>
<para>Scroll 'text' by 'step' characters showing
'length' number of characters at the same time. The text
may also contain variables. 'step' is optional and defaults
to 1 if not set. If a var creates output on multiple lines
then the lines are placed behind each other separated with
a '|'-sign. If you change the textcolor inside $scroll it
will automatically have it's old value back at the end of
$scroll. The end and the start of text will be separated by
'length' number of spaces.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>seen_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as seen in the specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>shadecolor</emphasis> <emphasis remap='B'>(color)</emphasis></term>
  <listitem>
<para>Change shading color</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>smapi</emphasis> <emphasis remap='B'>(ARGS)</emphasis></term>
  <listitem>
<para>when using smapi, display contents of the
/sys/devices/platform/smapi directory. ARGS are either
'(FILENAME)' or 'bat (INDEX) (FILENAME)' to display the
corresponding files' content. This is a very raw method of
accessing the smapi values. When available, better use one
of the smapi_* variables instead.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>smapi_bat_bar</emphasis> <emphasis remap='B'>(INDEX),(height),(width)</emphasis></term>
  <listitem>
<para>when using smapi, display the remaining capacity
of the battery with index INDEX as a bar.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>smapi_bat_perc</emphasis> <emphasis remap='B'>(INDEX)</emphasis></term>
  <listitem>
<para>when using smapi, display the remaining capacity
in percent of the battery with index INDEX. This is a
separate variable because it supports the 'use_spacer'
configuration option.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>smapi_bat_power</emphasis> <emphasis remap='B'>INDEX</emphasis></term>
  <listitem>
<para>when using smapi, display the current power of
the battery with index INDEX in watt. This is a separate
variable because the original read out value is being
converted from mW. The sign of the output reflects charging
(positive) or discharging (negative) state.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>smapi_bat_temp</emphasis> <emphasis remap='B'>INDEX</emphasis></term>
  <listitem>
<para>when using smapi, display the current temperature
of the battery with index INDEX in degree Celsius. This is
a separate variable because the original read out value is
being converted from milli degree Celsius.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>sony_fanspeed</emphasis> </term>
  <listitem>
<para>Displays the Sony VAIO fanspeed information if
sony-laptop kernel support is enabled. Linux only.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>stippled_hr</emphasis> <emphasis remap='B'>(space)</emphasis></term>
  <listitem>
<para>Stippled (dashed) horizontal line</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>swap</emphasis> </term>
  <listitem>
<para>Amount of swap in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>swapbar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Bar that shows amount of swap in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>swapfree</emphasis> </term>
  <listitem>
<para>Amount of free swap</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>swapmax</emphasis> </term>
  <listitem>
<para>Total amount of swap</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>swapperc</emphasis> </term>
  <listitem>
<para>Percentage of swap in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>sysname</emphasis> </term>
  <listitem>
<para>System name, Linux for example</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>tab</emphasis> <emphasis remap='B'>(width, (start))</emphasis></term>
  <listitem>
<para>Puts a tab of the specified width, starting from
column 'start'. The unit is pixels for both arguments.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>tail</emphasis> <emphasis remap='B'>logfile lines (next_check)</emphasis></term>
  <listitem>
<para>Displays last N lines of supplied text file. The
file is checked every 'next_check' update. If next_check is
not supplied, Conky defaults to 2. Max of 30 lines can be
displayed, or until the text buffer is filled.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>tcp_portmon</emphasis> <emphasis remap='B'>port_begin port_end item (index)</emphasis></term>
  <listitem>
<para>TCP port (both IPv6 and IPv4) monitor for
specified local ports. Port numbers must be in
the range 1 to 65535. Valid items are:</para>

<para><emphasis remap='B'>count</emphasis>
<emphasis remap='B'>Total number of connections in the
range</emphasis>
<!-- br -->
<emphasis remap='B'>rip</emphasis>
<emphasis remap='B'>Remote ip address</emphasis>
<!-- br -->
<emphasis remap='B'>rhost</emphasis>
<emphasis remap='B'>Remote host name</emphasis>
<!-- br -->
<emphasis remap='B'>rport</emphasis>
<emphasis remap='B'>Remote port number</emphasis>
<!-- br -->
<emphasis remap='B'>rservice</emphasis>
<emphasis remap='B'>Remote service name from
/etc/services</emphasis>
<!-- br -->
<emphasis remap='B'>lip</emphasis>
<emphasis remap='B'>Local ip address</emphasis>
<!-- br -->
<emphasis remap='B'>lhost</emphasis>
<emphasis remap='B'>Local host name</emphasis>
<!-- br -->
<emphasis remap='B'>lport</emphasis>
<emphasis remap='B'>Local port number</emphasis>
<!-- br -->
<emphasis remap='B'>lservice</emphasis>
<emphasis remap='B'>Local service name from
/etc/services</emphasis></para>

<para>The connection index provides you with access to
each connection in the port monitor. The monitor will
return information for index values from 0 to n-1
connections. Values higher than n-1 are simply ignored.
For the "count" item, the connection index must be
omitted. It is required for all other items.</para>

<para>Examples:</para>

<para><emphasis remap='B'>${tcp_portmon 6881 6999
count}</emphasis>
<emphasis remap='B'>Displays the number of connections in
the bittorrent port range</emphasis>
<!-- br -->
<emphasis remap='B'>${tcp_portmon 22 22 rip 0}</emphasis>
<emphasis remap='B'>Displays the remote host ip of the
first sshd connection</emphasis>
<!-- br -->
<emphasis remap='B'>${tcp_portmon 22 22 rip 9}</emphasis>
<emphasis remap='B'>Displays the remote host ip of the
tenth sshd connection</emphasis>
<!-- br -->
<emphasis remap='B'>${tcp_portmon 1 1024 rhost
0}</emphasis>
<emphasis remap='B'>Displays the remote host name of the
first connection on a privileged port</emphasis>
<!-- br -->
<emphasis remap='B'>${tcp_portmon 1 1024 rport
4}</emphasis>
<emphasis remap='B'>Displays the remote host port of the
fifth connection on a privileged port</emphasis>
<!-- br -->
<emphasis remap='B'>${tcp_portmon 1 65535 lservice
14}</emphasis>
<emphasis remap='B'>Displays the local service name of the
fifteenth connection in the range of all
ports</emphasis></para>

<para>Note that port monitor variables which share the
same port range actually refer to the same monitor, so
many references to a single port range for different
items and different indexes all use the same monitor
internally. In other words, the program avoids creating
redundant monitors.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>templateN</emphasis> <emphasis remap='B'>(arg1)</emphasis> <emphasis remap='B'>(arg2)</emphasis> <emphasis remap='B'>(arg3 ...)</emphasis></term>
  <listitem>
<para>Evaluate the content of the templateN
configuration variable (where N is a value between 0
and 9, inclusively), applying substitutions as
described in the documentation of the corresponding
configuration variable. The number of arguments is
optional, but must match the highest referred index in
the template. You can use the same special sequences in
each argument as the ones valid for a template
definition, e.g. to allow an argument to contain a
whitespace. Also simple nesting of templates is
possible this way.</para>

<para>Here are some examples of template
definitions:</para>

<para>template0 $&bsol;1&bsol;2
<!-- br -->
template1 &bsol;1: ${fs_used &bsol;2} / ${fs_size
&bsol;2}
<!-- br -->
template2 &bsol;1 &bsol;2</para>

<para>The following list shows sample usage of the
templates defined above, with the equivalent syntax
when not using any template at all:</para>

<informaltable pgwide='0' frame='none'>
  <tgroup cols='2' align='center'>
    <colspec colname='c1'/>
    <colspec colname='c2'/>
    <tbody>
      <row>
        <entry align='left'>using template</entry>
        <entry align='left'>same without template</entry>
      </row>
      <row>
        <entry align='left'>.T&amp;</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'>_ _</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'>l l</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'>l l</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'>l l.</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'>${template0 node name}</entry>
        <entry align='left'>$nodename</entry>
      </row>
      <row>
        <entry align='left'>${template1 root /}</entry>
        <entry align='left'><para>root: ${fs_free /} / ${fs_size
/}</para></entry>
      </row>
      <row>
        <entry align='left'>${template1
${template2&bsol; disk&bsol; root}
/}</entry>
        <entry align='left'>disk root:
${fs_free /} / ${fs_size
/}</entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>


  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>texeci</emphasis> <emphasis remap='B'>interval command</emphasis></term>
  <listitem>
<para>Runs a command at an interval inside a thread and
displays the output. Same as $execi, except the command is
run inside a thread. Use this if you have a slow script to
keep Conky updating. You should make the interval slightly
longer then the time it takes your script to execute. For
example, if you have a script that take 5 seconds to
execute, you should make the interval at least 6 seconds.
See also $execi. This object will clean up the thread when
it is destroyed, so it can safely be used in a nested
fashion, though it may not produce the desired behaviour if
used this way.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>threads</emphasis> </term>
  <listitem>
<para>Total threads</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>time</emphasis> <emphasis remap='B'>(format)</emphasis></term>
  <listitem>
<para>Local time, see man strftime to get more
information about format</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>to_bytes</emphasis> <emphasis remap='B'>size</emphasis></term>
  <listitem>
<para>If 'size' is a number followed by a size-unit
(kilobyte,mb,GiB,...) then it converts the size to bytes
and shows it without unit, otherwise it just shows 'size'.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top</emphasis> <emphasis remap='B'>type num</emphasis></term>
  <listitem>
<para>This takes arguments in the form:top (name)
(number) Basically, processes are ranked from highest to
lowest in terms of cpu usage, which is what (num)
represents. The types are: "name", "pid", "cpu", "mem",
"mem_res", "mem_vsize", "time", "uid", "user", "io_perc", "io_read" and
"io_write". There can be a max of 10 processes listed.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top_io</emphasis> <emphasis remap='B'>type num</emphasis></term>
  <listitem>
<para>Same as top, except sorted by the amount of I/O
the process has done during the update interval</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top_mem</emphasis> <emphasis remap='B'>type num</emphasis></term>
  <listitem>
<para>Same as top, except sorted by mem usage instead
of cpu</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>top_time</emphasis> <emphasis remap='B'>type num</emphasis></term>
  <listitem>
<para>Same as top, except sorted by total CPU time
instead of current CPU usage</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>totaldown</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Total download, overflows at 4 GB on Linux with
32-bit arch and there doesn't seem to be a way to know how
many times it has already done that before conky has
started.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>totalup</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Total upload, this one too, may overflow</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>trashed_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails marked as trashed in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>tztime</emphasis> <emphasis remap='B'>(timezone (format))</emphasis></term>
  <listitem>
<para>Local time for specified timezone, see man
strftime to get more information about format. The timezone
argument is specified in similar fashion as TZ environment
variable. For hints, look in /usr/share/zoneinfo. e.g.
US/Pacific, Europe/Zurich, etc.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>gid_name</emphasis> <emphasis remap='B'>gid</emphasis></term>
  <listitem>
<para>Name of group with this gid</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>uid_name</emphasis> <emphasis remap='B'>uid</emphasis></term>
  <listitem>
<para>Username of user with this uid</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>unflagged_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails not marked as flagged in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>unforwarded_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails not marked as forwarded in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>unreplied_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of mails not marked as replied in the
specified mailbox or mail spool if not. Only maildir type
mailboxes are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>unseen_mails</emphasis> <emphasis remap='B'>(maildir)</emphasis> <emphasis remap='B'>(interval)</emphasis></term>
  <listitem>
<para>Number of new or unseen mails in the specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>updates</emphasis> <emphasis remap='B'>Number of updates</emphasis></term>
  <listitem>
<para>for debugging</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>upspeed</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Upload speed in suitable IEC units</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>upspeedf</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Upload speed in KiB with one decimal</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>upspeedgraph</emphasis> <emphasis remap='B'>(netdev) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (-t) (-l)</emphasis></term>
  <listitem>
<para>Upload speed graph, colours defined in hex, minus
the #. If scale is non-zero, it becomes the scale for the
graph. Uses a logarithmic scale (to see small numbers) when
you use the -l switch. Takes the switch '-t' to use a
temperature gradient, which makes the gradient values
change depending on the amplitude of a particular graph
value (try it and see).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>uptime</emphasis> </term>
  <listitem>
<para>Uptime</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>uptime_short</emphasis> </term>
  <listitem>
<para>Uptime in a shorter format</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>user_names</emphasis> </term>
  <listitem>
<para>Lists the names of the users logged in</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>user_number</emphasis> </term>
  <listitem>
<para>Number of users logged in</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>user_terms</emphasis> </term>
  <listitem>
<para>Lists the consoles in use</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>user_times</emphasis> </term>
  <listitem>
<para>Lists how long users have been logged in for</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>user_time</emphasis> <emphasis remap='B'>console</emphasis></term>
  <listitem>
<para>Lists how long the user for the given console has been
logged in for</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>utime</emphasis> <emphasis remap='B'>(format)</emphasis></term>
  <listitem>
<para>Display time in UTC (universal coordinate time).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>voffset</emphasis> <emphasis remap='B'>(pixels)</emphasis></term>
  <listitem>
<para>Change vertical offset by N pixels. Negative
values will cause text to overlap. See also $offset.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>voltage_mv</emphasis> <emphasis remap='B'>(n)</emphasis></term>
  <listitem>
<para>Returns CPU #n's voltage in mV. CPUs are counted
from 1. If omitted, the parameter defaults to 1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>voltage_v</emphasis> <emphasis remap='B'>(n)</emphasis></term>
  <listitem>
<para>Returns CPU #n's voltage in V. CPUs are counted
from 1. If omitted, the parameter defaults to 1.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>weather</emphasis> <emphasis remap='B'>URI locID data_type (interval_in_minutes)</emphasis></term>
  <listitem>
<para>Download, parse and display METAR data.</para>

<para>For the 'URI', there are two
possibilities:</para>

<para><ulink url='http://weather.noaa.gov/pub/data/observations/metar/stations/'>http://weather.noaa.gov/pub/data/observations/metar/stations/</ulink>
<!-- br -->
<ulink url='http://xoap.weather.com/weather/local/'>http://xoap.weather.com/weather/local/</ulink></para>

<para>The first one is free to use but the second
requires you to register and obtain your partner ID and
license key. These two must be written, separated by a
space, into a file called .xoaprc which needs to be
placed into your home directory.</para>

<para>'locID' must be a valid location identifier for
the required uri. For the NOAA site this must be a
valid ICAO (see for instance
https://pilotweb.nas.faa.gov/qryhtml/icao/). For the
weather.com site this must be a valid location ID (see
for instance
<ulink url='http://aspnetresources.com/tools/locid.aspx'>http://aspnetresources.com/tools/locid.aspx</ulink>).</para>

<para>'data_type' must be one of the following:</para>

<para><emphasis remap='B'>last_update</emphasis>
The date and time stamp of the data.
The result depends on the URI used. For the
NOAA site it is date (yyyy/mm/dd) and UTC time.
For the weather.com one it is date
([m]m/[d]d/yy) and Local Time of the
station.
<!-- br -->
<emphasis remap='B'>temperature</emphasis></para>

<para>Air temperature (you can use the
'temperature_unit' config setting to change
units)
<!-- br -->
<emphasis remap='B'>cloud_cover</emphasis></para>

<para>The highest cloud cover status
<!-- br -->
<emphasis remap='B'>pressure</emphasis></para>

<para>Air pressure in millibar
<!-- br -->
<emphasis remap='B'>wind_speed</emphasis></para>

<para>Wind speed in km/h
<!-- br -->
<emphasis remap='B'>wind_dir</emphasis></para>

<para>Wind direction
<!-- br -->
<emphasis remap='B'>wind_dir_DEG</emphasis></para>

<para>Compass wind direction
<!-- br -->
<emphasis remap='B'>humidity</emphasis></para>

<para>Relative humidity in %
<!-- br -->
<emphasis remap='B'>weather</emphasis></para>

<para>Any relevant weather event (rain, snow,
etc.). This is not used if you are querying the
weather.com site since this data is aggregated
into the cloud_cover one
<!-- br -->
<emphasis remap='B'>icon</emphasis></para>

<para>Weather icon (only for
www.weather.com). Can be used together with the
icon kit provided upon registering to their
service.</para>

<para>'delay_in_minutes' (optional, default 30) cannot
be less than 30 minutes.</para>

<para>This object is threaded, and once a thread is
created it can't be explicitly destroyed. One thread
will run for each URI specified.</para>

<para>Note that these variables are still EXPERIMENTAL
and can be subject to many future changes.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>weather_forecast</emphasis> <emphasis remap='B'>URI locID day data_type (interval_in_minutes)</emphasis></term>
  <listitem>
<para>Download, parse and display weather forecast data
for a given day (daytime only).</para>

<para>For the 'URI', for the time being only
<ulink url='http://xoap.weather.com/weather/local/'>http://xoap.weather.com/weather/local/</ulink> is
supported. See 'weather' above for details of usage</para>

<para>'locID', see 'weather' above.</para>

<para>'day' is a number from 0 (today) to 4 (3 days
after tomorrow).</para>

<para>'data_type' must be one of the following:</para>

<para><emphasis remap='B'>day</emphasis>
<emphasis remap='B'>Day of the week</emphasis>
<!-- br -->
<emphasis remap='B'>date</emphasis>
<emphasis remap='B'>Date, in the form MMM DD (ie. Jul 14)</emphasis>
<!-- br -->
<emphasis remap='B'>low</emphasis>
<emphasis remap='B'>Minimun temperature (you can use the
'temperature_unit' config setting to change
units)</emphasis>
<!-- br -->
<emphasis remap='B'>hi</emphasis>
<emphasis remap='B'>Maximum temperature (you can use the
'temperature_unit' config setting to change
units)</emphasis>
<!-- br -->
<emphasis remap='B'>icon</emphasis>
<emphasis remap='B'>Weather icon. Can be used together with the
icon kit provided upon registering to the weather.com
service</emphasis>
<!-- br -->
<emphasis remap='B'>forecast</emphasis>
<emphasis remap='B'>Weather forecast (sunny, rainy, etc.)</emphasis>
<!-- br -->
<emphasis remap='B'>wind_speed</emphasis>
<emphasis remap='B'>Wind speed in km/h</emphasis>
<!-- br -->
<emphasis remap='B'>wind_dir</emphasis>
<emphasis remap='B'>Wind direction</emphasis>
<!-- br -->
<emphasis remap='B'>wind_dir_DEG</emphasis>
<emphasis remap='B'>Compass wind direction</emphasis>
<!-- br -->
<emphasis remap='B'>humidity</emphasis>
<emphasis remap='B'>Relative humidity in %</emphasis>
<!-- br -->
<emphasis remap='B'>precipitation</emphasis>
<emphasis remap='B'>Probability of having a
precipitation (in %)</emphasis></para>

<para>'delay_in_minutes' (optional, default 210) cannot
be lower than 210 min.</para>

<para>This object is threaded, and once a thread is
created it can't be explicitly destroyed. One thread
will run for each URI specified. You can use any
protocol that Curl supports.</para>

<para>Note that these variables are still EXPERIMENTAL
and can be subject to many future changes.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_ap</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless access point MAC address (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_bitrate</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless bitrate (ie 11 Mb/s) (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_essid</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless access point ESSID (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_link_bar</emphasis> <emphasis remap='B'>(height),(width) (net)</emphasis></term>
  <listitem>
<para>Wireless link quality bar (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_link_qual</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless link quality (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_link_qual_max</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless link quality maximum value (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_link_qual_perc</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless link quality in percents (Linux only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>wireless_mode</emphasis> <emphasis remap='B'>(net)</emphasis></term>
  <listitem>
<para>Wireless mode (Managed/Ad-Hoc/Master) (Linux
only)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>words</emphasis> <emphasis remap='B'>textfile</emphasis></term>
  <listitem>
<para>Displays the number of words in the given file</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_album</emphasis> </term>
  <listitem>
<para>Album in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_artist</emphasis> </term>
  <listitem>
<para>Artist in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_bar</emphasis> <emphasis remap='B'>(height),(width)</emphasis></term>
  <listitem>
<para>Bar of XMMS2's progress</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_bitrate</emphasis> </term>
  <listitem>
<para>Bitrate of current song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_comment</emphasis> </term>
  <listitem>
<para>Comment in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_date</emphasis> </term>
  <listitem>
<para>Returns song's date.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_duration</emphasis> </term>
  <listitem>
<para>Duration of current song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_elapsed</emphasis> </term>
  <listitem>
<para>Song's elapsed time</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_genre</emphasis> </term>
  <listitem>
<para>Genre in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_id</emphasis> </term>
  <listitem>
<para>XMMS2 id of current song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_percent</emphasis> </term>
  <listitem>
<para>Percent of song's progress</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_playlist</emphasis> </term>
  <listitem>
<para>Returns the XMMS2 playlist.</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_size</emphasis> </term>
  <listitem>
<para>Size of current song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_smart</emphasis> </term>
  <listitem>
<para>Prints the song name in either the form "artist -
title" or file name, depending on whats available</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_status</emphasis> </term>
  <listitem>
<para>XMMS2 status (Playing, Paused, Stopped, or
Disconnected)</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_timesplayed</emphasis> </term>
  <listitem>
<para>Number of times a song was played (presumably).</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_title</emphasis> </term>
  <listitem>
<para>Title in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_tracknr</emphasis> </term>
  <listitem>
<para>Track number in current XMMS2 song</para> 

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xmms2_url</emphasis> </term>
  <listitem>
<para>Full path to current song</para> 

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='lua_api'><title>LUA API</title>
<para>Conky features a Lua Programming API, and also ships with Lua
bindings for some useful libraries. Conky defines certain global
functions and variables which can be accessed from Lua code running
in Conky.</para>

<para>To use Lua Conky, you first need to make sure you have a version of Conky
with Lua support enabled (&ldquo;conky -v&rdquo; will report this). Scripts
must first be loaded using the lua_load configuration option. You
then call functions in Lua via Conky's $lua, $lua_read, and Lua
hooks.</para>

<para>Be careful when creating threaded objects through the Lua API. You
could wind up with a whole bunch of threads running if a thread is
created with each iteration.</para>

<para>At this time, the Lua API should not be considered stable and may
change drastically from one release to another as it matures.</para>

<para>NOTE: In order to accommodate certain features in the cairo
library's API, Conky will export a few additional functions for the
creation of certain structures. These are documented below.</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>conky_parse(string)</emphasis> <emphasis remap='B'>function</emphasis></term>
  <listitem>
<para>This function takes a string that is evaluated as
per Conky's TEXT section, and then returns a string
with the result.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_set_update_interval(number)</emphasis> <emphasis remap='B'>function</emphasis></term>
  <listitem>
<para>Sets Conky's update interval (in seconds) to
'number'.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_window</emphasis> <emphasis remap='B'>table</emphasis></term>
  <listitem>
<para>This table contains some information about
Conky's window. The following table describes the
values contained:</para>

<para><emphasis remap='B'>drawable</emphasis>
<emphasis remap='B'>Window's drawable (Xlib Drawable),
requires Lua extras enabled at compile
time.</emphasis>
<!-- br -->
<emphasis remap='B'>visual</emphasis>
<emphasis remap='B'>Window's visual (Xlib Visual), requires
Lua extras enabled at compile time.</emphasis>
<!-- br -->
<emphasis remap='B'>display</emphasis>
<emphasis remap='B'>Window's display (Xlib Display),
requires Lua extras enabled at compile
time.</emphasis>
<!-- br -->
<emphasis remap='B'>width</emphasis>
<emphasis remap='B'>Window width (in pixels).</emphasis>
<!-- br -->
<emphasis remap='B'>height</emphasis>
<emphasis remap='B'>Window height (in pixels).</emphasis>
<!-- br -->
<emphasis remap='B'>border_inner_margin</emphasis>
<emphasis remap='B'>Window's inner border margin (in
pixels).</emphasis>
<!-- br -->
<emphasis remap='B'>border_outer_margin</emphasis>
<emphasis remap='B'>Window's outer border margin (in
pixels).</emphasis>
<!-- br -->
<emphasis remap='B'>border_width</emphasis>
<emphasis remap='B'>Window's border width (in
pixels).</emphasis>
<!-- br -->
<emphasis remap='B'>text_start_x</emphasis>
<emphasis remap='B'>The x component of the starting
coordinate of text drawing.</emphasis>
<!-- br -->
<emphasis remap='B'>text_start_y</emphasis>
<emphasis remap='B'>The y component of the starting
coordinate of text drawing.</emphasis>
<!-- br -->
<emphasis remap='B'>text_width</emphasis>
<emphasis remap='B'>The width of the text drawing
region.</emphasis>
<!-- br -->
<emphasis remap='B'>text_height</emphasis>
<emphasis remap='B'>The height of the text drawing
region.</emphasis></para>

<para>NOTE: This table is only defined when X support
is enabled.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_info</emphasis> <emphasis remap='B'>table</emphasis></term>
  <listitem>
<para>This table contains some information about
Conky's internal data. The following table describes
the values contained:</para>

<para><emphasis remap='B'>update_interval</emphasis>
<emphasis remap='B'>Conky's update interval (in
seconds).</emphasis>
<!-- br -->
<emphasis remap='B'>uptime</emphasis>
<emphasis remap='B'>System uptime, in seconds.</emphasis></para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_build_info</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>A string containing the build info for this
particular instance of Conky, including the version,
build date, and architecture.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_build_date</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>A string containing the build date for this
particular instance of Conky.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_build_arch</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>A string containing the build architecture for
this particular instance of Conky.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_version</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>A string containing the version of the current
instance of Conky.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conky_config</emphasis> <emphasis remap='B'>string</emphasis></term>
  <listitem>
<para>A string containing the path of the current Conky
configuration file.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cairo_text_extents_t:create()</emphasis> <emphasis remap='B'>function</emphasis></term>
  <listitem>
<para>Call this function to return a new cairo_text_extents_t structure. A creation function for this structure is not provided by the cairo API. After calling this, you should use tolua.takeownership() on the return value to ensure ownership is passed properly.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cairo_font_extents_t:create()</emphasis> <emphasis remap='B'>function</emphasis></term>
  <listitem>
<para>Call this function to return a new cairo_font_extents_t structure. A creation function for this structure is not provided by the cairo API. After calling this, you should use tolua.takeownership() on the return value to ensure ownership is passed properly.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cairo_matrix_t:create()</emphasis> <emphasis remap='B'>function</emphasis></term>
  <listitem>
<para>Call this function to return a new cairo_matrix_t structure. A creation function for this structure is not provided by the cairo API. After calling this, you should use tolua.takeownership() on the return value to ensure ownership is passed properly.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='examples'><title>EXAMPLES</title>
<variablelist remap='TP'>
  <varlistentry>
  <term>conky <option>-t '${time %D %H:%M}' -o -u 30</option></term>
  <listitem>
<para>Start Conky in its own window with date
and clock as text and 30 sec update
interval.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>conky <option>-a top_left -x 5 -y 500 -d</option></term>
  <listitem>
<para>Start Conky to background at coordinates
(5, 500).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>conky <option>-C &gt; ~/.conkyrc</option></term>
  <listitem>
<para>Do not start Conky, but have it output
the builtin default config file to ~/.conkyrc for
later customising.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='files'><title>FILES</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='I'>${sysconfdir}/conky/conky.conf</emphasis></term>
  <listitem>
<para>Default system-wide configuration file.
The value of ${sysconfdir} depends on the
compile-time options (most likely /etc).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><filename>~/.conkyrc</filename></term>
  <listitem>
<para>Default personal configuration
file.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>Drawing to root or some other desktop window directly
doesn't work with all window managers. Especially doesn't
work well with Gnome and it has been reported that it
doesn't work with KDE either. Nautilus can be disabled from
drawing to desktop with program gconf-editor. Uncheck
show_desktop in /apps/nautilus/preferences/. There is -w
switch in Conky to set some specific window id. You might
find xwininfo -tree useful to find the window to draw to.
You can also use -o argument which makes Conky to create
its own window. If you do try running Conky in its own
window, be sure to read up on the own_window_type settings
and experiment.</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para>&lang;<ulink url='http://conky.sourceforge.net/&rang;'>http://conky.sourceforge.net/&rang;</ulink></para>

<para>&lang;<ulink url='http://www.sourceforge.net/projects/conky&rang;'>http://www.sourceforge.net/projects/conky&rang;</ulink></para>

<para>&lang;<ulink url='http://wiki.conky.be&rang;'>http://wiki.conky.be&rang;</ulink></para>

<para>#conky on irc.freenode.net</para>
</refsect1>

<refsect1 id='copying'><title>COPYING</title>
<para>Copyright (c) 2005-2010 Brenden Matthews, Philip
Kovacs, et. al. Any original torsmo code is licensed under
the BSD license (see LICENSE.BSD for a copy). All code
written since the fork of torsmo is licensed under the GPL
(see LICENSE.GPL for a copy), except where noted
differently (such as in portmon code, timed thread code,
and audacious code which are LGPL, and prss which is an
MIT-style license).</para>
</refsect1>

<refsect1 id='authors'><title>AUTHORS</title>
<para>The Conky dev team (see AUTHORS for a full list of
contributors).</para>
</refsect1>
</refentry>

